<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>WiperDog</web>
  <name>JobConfiguration</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1410327662000</creationDate>
  <parent>WiperDog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1410909809000</date>
  <contentUpdateDate>1410489124000</contentUpdateDate>
  <version>1.1</version>
  <title>JobConfiguration</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{include document="WiperDog.checkService"/}}{{include document="WiperDogLib.GetJobInfo"/}}{{include document="WiperDogLib.CommonMessage"/}}&#xd;
{{velocity}}&#xd;
$xwiki.ssx.use('WiperDog.checkService')&#xd;
$xwiki.jsx.use("WiperDogLib.GetJobInfo")&#xd;
$xwiki.ssx.use("WiperDogLib.GetJobInfo")&#xd;
$xwiki.jsx.use("WiperDogLib.CommonMessage")&#xd;
$xwiki.ssx.use("WiperDogLib.CommonMessage")&#xd;
{{/velocity}}&#xd;
{{html wiki="true" clean="false"}}&#xd;
&lt;div id="messageValid">&lt;/div>&#xd;
&lt;div id="dropdownlist">&#xd;
 &lt;table>&#xd;
  &lt;tr>&#xd;
   &lt;th>Monitoring Type(*)&lt;/th>&#xd;
   &lt;td>&lt;select id="listMonitoring" tabindex="1">&lt;/select>&lt;div id="messageMonitoringtype">&lt;/div>&lt;/td>&#xd;
  &lt;/tr>&#xd;
  &lt;tr>&#xd;
   &lt;th>DB Type&lt;/th>&#xd;
   &lt;td>&lt;select id="dbTypeCbb" tabindex="2">&lt;/select>&lt;br/>&lt;div id="hintMessage">choose if Monitoring Type is @DB&lt;/div>&lt;div id="messageDbtypeCbb">&lt;/div>&lt;/td>&#xd;
  &lt;/tr>&#xd;
  &lt;tr>&#xd;
   &lt;th>Job File&lt;/th>&#xd;
   &lt;td>&lt;select id="listJob" tabindex="3">&lt;option id="noChoice" value="noChoice">-select a job-&lt;/option>&lt;/select>&lt;br/>&lt;div id="hintMessage">choose if edit existed job&lt;/div>&lt;/td>&#xd;
  &lt;/tr>&#xd;
 &lt;/table>&#xd;
&lt;/div>&#xd;
&#xd;
&lt;form action="#" method='POST' id="form1">&#xd;
&#xd;
&lt;div class ='showHideLink'>&lt;a class ='toggleJobInformation' id = 'hide'>Show JOB INFORMATION Form&lt;/a>&lt;/div>&#xd;
&#xd;
&lt;table class='JobInformationValues'>&#xd;
	&lt;tr>&#xd;
		&lt;th>Job Name(*)&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="jobNameText" tabindex="4" placeholder="MySQL.Test">&lt;div id="messageJobnameText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Job File&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="jobFileNameText" tabindex="5" placeholder="MySQL.Test.job">&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Type of Query(*)&lt;/th>&#xd;
		&lt;td>&#xd;
			&lt;select style="width:100%" id="listActionJob" tabindex="6">&#xd;
				&lt;option id="showHideQuery" value="runQuery">Query&lt;/option>&#xd;
				&lt;option id="showHideOther" value="runOther">DB Execution&lt;/option>&#xd;
				&lt;option id="showHideCommand" value="runCommand">Command&lt;/option>&#xd;
				&lt;option id="showHideFetchAction" value="runFetchAction">Fetch Action&lt;/option>&#xd;
			&lt;/select>&#xd;
                        &lt;div id="messageListActionJob">&lt;/div>&#xd;
		&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideQueryForm">&#xd;
		&lt;th>Query(*)&lt;/th>&#xd;
		&lt;td>&lt;textarea id="queryText" style="width:100%" rows=5 tabindex="7" placeholder="select  from information_schema.tables where rownum &lt; :maxrownum">&lt;/textarea>&lt;div id="messageQueryText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideQueryVariablesForm">&#xd;
		&lt;th>Query Variables&lt;/th>&#xd;
		&lt;td>&lt;textarea id="queryVariableText" style="width:100%" rows=5 cols=10 tabindex="8" placeholder="maxrownum:10">&lt;/textarea>&lt;div id="messageQueryVariableText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideDbexecForm">&#xd;
		&lt;th>DB Execution(*)&lt;/th>&#xd;
		&lt;td>&lt;textarea id="dbexecText" style="width:100%" rows=5 tabindex="7" placeholder="update test name = 'king' where id = :id">&lt;/textarea>&lt;div id="messageDbexecText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideDbexecVariablesForm">&#xd;
		&lt;th>DB Exec Variables&lt;/th>&#xd;
		&lt;td>&lt;textarea id="dbexecVariableText" style="width:100%" rows=5 tabindex="8" placeholder='"Id":1'>&lt;/textarea>&lt;div id="messageDbexecVariableText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideCommandForm">&#xd;
		&lt;th>Command(*)&lt;/th>&#xd;
		&lt;td>&lt;textarea id="commandText" style="width:100%" rows=5 tabindex="7" placeholder='cmd /c "echo 123 ABC" '>&lt;/textarea>&lt;div id="messageCommandText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideFormatForm">&#xd;
		&lt;th>Format&lt;/th>&#xd;
		&lt;td>&lt;textarea id="formatText" style="width:100%" rows=5 tabindex="8" placeholder='split: " ", 1: "id", 2: "value"'>&lt;/textarea>&lt;div id="messageFormatText" placeholder='split: " ", 1: "id", 2: "value"'>&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="showHideFetchactionForm">&#xd;
		&lt;th>Fetch Action(*)&lt;/th>&#xd;
		&lt;td>&lt;textarea id="fetchactionText" style="width:100%" rows=5 tabindex="7" placeholder='return [ [a: "abc", b: "def"] ]'>&lt;/textarea>&lt;div id="messageFetchactionText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&#xd;
	&lt;tr>&#xd;
		&lt;th>Send Type&lt;/th>&#xd;
		&lt;td>&#xd;
			&lt;select style="width:100%" id="listSendType" tabindex="9">&#xd;
				&lt;option id="none" value="slectDataType">-select a data type-&lt;/option>&#xd;
				&lt;option id="none" value="Store">Store&lt;/option>&#xd;
				&lt;option id="none" value="Subtyped">Subtyped&lt;/option>&#xd;
				&lt;option id="none" value="Gathered">Gathered&lt;/option>&#xd;
			&lt;/select>&#xd;
		&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&#xd;
&lt;table class='JobInformationValues'>&#xd;
	&lt;tr>&#xd;
		&lt;th>Accumulate&lt;/th>&#xd;
		&lt;td>&lt;textarea id="accumulateText" style="width:100%" rows=5 tabindex="10" placeholder="OUTPUT.each { rec ->&#xd;
  rec['IncreaseValue'] = rec['value'] - prevOUTPUT[rec.DatabaseName]['value']&#xd;
}">&lt;/textarea>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Finally&lt;/th>&#xd;
		&lt;td>&lt;textarea id="finallyText" style="width:100%" rows=5 tabindex="11">&lt;/textarea>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Group Key&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:50%" id="groupkeyText" tabindex="12" placeholder="DatabaseName"/>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&#xd;
&lt;table class='JobInformationValues'>&#xd;
	&lt;tr>&#xd;
		&lt;th>Job Class&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="jobClassNameText" tabindex="13" placeholder="Jobclass">&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Comment for Job&lt;/th>&#xd;
		&lt;td>&lt;textarea style="width:100%;" rows=5 id="commentForJobText" tabindex="14" placeholder="/* comment for job */"&gt;&lt;/textarea>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Resource Id&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="resourceIdText" tabindex="15" placeholder="As/MsDbFree">&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Dest&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="destText" tabindex="16" placeholder="parameters.dest">&lt;div id="messageDest">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&#xd;
&lt;table class='JobInformationValues osInfoForm'>&#xd;
	&lt;tr>&#xd;
		&lt;th>OS Info&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:50%" id="osInfoText" tabindex="17" placeholder="parameters.osinfo"/>&lt;div id="messageOsinfoText">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&lt;div>&amp;nbsp;&lt;/div>&#xd;
&lt;div class ='showHideLink'>&lt;a class ='toggleKEYEXPR'  id = 'hide'>Show CHART Form&lt;/a>&lt;/div>&#xd;
&#xd;
&lt;table class="keyExprValues">&#xd;
	&lt;tr>&#xd;
		&lt;th>KEYEXPR._root&lt;/th>&#xd;
		&lt;td>&lt;input type="text" style="width:100%" id="rootText" tabindex="18" placeholder="ResourceName"/>&lt;div id="messageKeyexprRoot">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>KEYEXPR._sequence&lt;/th>&#xd;
		&lt;td>&lt;textarea style="width:100%" id="sequenceText" tabindex="19" placeholder="WaitsPct">&lt;/textarea>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&#xd;
&lt;table class="keyExprValues">&#xd;
	&lt;tr>&#xd;
		&lt;th>KEYEXPR._unit&lt;/th>&#xd;
		&lt;td>&lt;textarea style="width:100%" id="unitText" tabindex="20" placeholder='"LimitVal":"count", "CurrentVal":"count","ResourceUsedPct":"%", "FreeVal":"count"'>&lt;/textarea>&lt;div id="messageKeyexprUnit">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&#xd;
&lt;table id="chartTable" class="keyExprValues">&#xd;
	&lt;tr>&#xd;
		&lt;th colspan="6">KEYEXPR._chart&lt;/th>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Group&lt;/th>&#xd;
		&lt;th>Type&lt;/th>&#xd;
		&lt;th&gt;Name&lt;/th>&#xd;
		&lt;th>Chart Column&lt;/th>&#xd;
		&lt;th>Hint Column&lt;/th>&#xd;
		&lt;th>Action&lt;/th>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="inputChart">&#xd;
		&lt;td>&lt;input type="text" id="groupChartText" tabindex="21" disabled placeholder="TestGroup"/>&lt;div id='messageChartGroup'>&lt;/div>&lt;/td>&#xd;
		&lt;td>&#xd;
			&lt;select id="listChartType" tabindex="22">&#xd;
				&lt;option id="none" value="pie">pie&lt;/option>&#xd;
				&lt;option id="none" value="line">line&lt;/option>&#xd;
				&lt;option id="none" value="bar">bar&lt;/option>&#xd;
				&lt;option id="none" value="area">area&lt;/option>&#xd;
			&lt;/select>&#xd;
                        &lt;div id="messageChartType">&lt;/div>&#xd;
		&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="nameChartText" tabindex="23" placeholder="Logbuffer waits count"/>&lt;div id="messageChartName">&lt;/div>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="chartColumnsText" tabindex="24" placeholder="WaitsCnt"/>&lt;div id="messageChartColumn">&lt;/div>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="hintColumnsText" tabindex="25" placeholder="WritesCnt, OsLogWrittenCnt, WaitsPct"/>&lt;/td>&#xd;
		&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateChartInfo" tabindex="26"/>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&lt;div id="messageChart">&lt;/div>&#xd;
&#xd;
&lt;div>&amp;nbsp;&lt;/div>&#xd;
&lt;div class ='showHideLink'>&lt;a class ='toggleJobParams' id = 'hide'>Show JOB PARAMS Form&lt;/a>&lt;/div>&#xd;
&#xd;
&lt;table id="paramJobTable">&#xd;
	&lt;tr>&#xd;
		&lt;th>Name&lt;/th>&#xd;
		&lt;th>Value&lt;/th>&#xd;
		&lt;th>Action&lt;/th>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="inputParams">&#xd;
		&lt;td>&lt;input type="text" style="width:100%;" id="nameJobText" tabindex="28" placeholder="ParamsName"/>&lt;div id="messageParamsName">&lt;/div>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" style="width:100%;" id="valueJobText" tabindex="29" placeholder="Value"/>&lt;div id="messageParamsValue">&lt;/div>&lt;/td>&#xd;
		&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateParamOfJob" tabindex="30"/>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&lt;div id="messageParams">&lt;/div>&#xd;
&lt;div>&amp;nbsp;&lt;/div>&#xd;
&lt;div class ='showHideLink'>&lt;a class ='toggleJobInst'  id = 'hide'>Show JOB INSTANCES Form&lt;/a>&lt;/div>&#xd;
&#xd;
&lt;table id="updateJobInstanceTable">&#xd;
	&lt;tr>&#xd;
		&lt;th>Instance Name&lt;/th>&#xd;
		&lt;th>Host ID&lt;/th>&#xd;
		&lt;th>SID&lt;/th>&#xd;
		&lt;th>Schedule&lt;/th>&#xd;
		&lt;th>Action&lt;/th>&#xd;
	&lt;/tr>&#xd;
	&lt;tr id="inputInstance">&#xd;
		&lt;td>&lt;input type="text" id="instanceNameText" tabindex="32" placeholder="instanceName"/>&lt;div id="messageInstanceName">&lt;/div>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="hostIdText" tabindex="33" placeholder="localhost"/>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="sidText" tabindex="34" placeholder="sid"/>&lt;/td>&#xd;
		&lt;td>&lt;input type="text" id="scheduleText" tabindex="35" placeholder="300i"/>&lt;div id="messageInstanceSchedule">&lt;/div>&lt;/td>&#xd;
		&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateInstance" tabindex="36"/>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&lt;div id="messageInstances">&lt;/div>&#xd;
&#xd;
&lt;div>&amp;nbsp;&lt;/div>&#xd;
&lt;div class ='showHideLink'>&lt;a class ='toggleTestJob' id = 'hide'>Show Test Job&lt;/a>&lt;/div>&#xd;
&#xd;
&lt;table id="testTable">&#xd;
	&lt;tr>&#xd;
		&lt;th>Action&lt;/th>&#xd;
		&lt;td>&lt;input type="button" style="width:100px;" name="runTest" id="runTest" class="button" value="Run" tabindex="38"/>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Result&lt;/th>&#xd;
		&lt;td>&lt;div id="testResult">&lt;/div>&lt;/td>&#xd;
	&lt;/tr>&#xd;
	&lt;tr>&#xd;
		&lt;th>Log&lt;/th>&#xd;
		&lt;td>&lt;textarea name="console" id="console" readonly="" rows="10">&lt;/textarea>&lt;/td>&#xd;
	&lt;/tr>&#xd;
&lt;/table>&#xd;
&lt;/form>&#xd;
&#xd;
{{/html}}&#xd;
{{html wiki="true" clean="false"}}&#xd;
&lt;div id="buttonUpdateJobInfo">&#xd;
		&lt;input type="button" style='width:150px; height:30px' value="Save" class="button" id="updateJobInfo" tabindex="39"/>&#xd;
&lt;/div>&#xd;
&lt;/form>&#xd;
{{/html}}</content>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a51304f1-6a56-48ed-933d-2a8a7b420f8a</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>var JobDeclared&#xd;
var ImportInstanceServlet&#xd;
var selectedJob&#xd;
var groupChart = null&#xd;
var charts = {} // chart data information&#xd;
var jobMap = {} // job data information&#xd;
var jobParams = {} // params data information&#xd;
var chart = {}&#xd;
var jobInstance = {} // instances data information&#xd;
var jobInstanceValue = {}&#xd;
var paramInstance = {}&#xd;
var fileSaved = false&#xd;
var htmlSourceValid = ""&#xd;
var checkValid = true&#xd;
&#xd;
require(['jquery'], function($) {&#xd;
&#xd;
    /**&#xd;
     * ready: document ready, process create init data and all actions of JobConfiguration monitor&#xd;
    */&#xd;
    $(document).ready(function() {&#xd;
        init();&#xd;
&#xd;
        // show / hide Job Information, KEYEXPR, JOB PARAMS and JOB INSTANCE FORM&#xd;
        $(".toggleJobInformation").click(function(){&#xd;
            $(".JobInformationValues").toggle('slow')&#xd;
            showHideControl($(this),"JOB INFORMATION")&#xd;
        })&#xd;
        $(".toggleKEYEXPR").click(function(){&#xd;
            $(".keyExprValues").toggle('slow')&#xd;
            showHideControl($(this),"CHART")&#xd;
        })&#xd;
        $(".toggleJobParams").click(function(){&#xd;
            $("#paramJobTable").toggle('slow')&#xd;
            showHideControl($(this),"JOB PARAMS")&#xd;
        })&#xd;
        $(".toggleJobInst").click(function(){&#xd;
            $("#updateJobInstanceTable").toggle('slow')&#xd;
            showHideControl($(this),"JOB INSTANCES")&#xd;
        })&#xd;
        $(".toggleTestJob").click(function(){&#xd;
            $("#testTable").toggle('slow')&#xd;
            showHideControl($(this),"TEST JOB")&#xd;
        })&#xd;
&#xd;
&#xd;
&#xd;
        // CHOOSE AN ACTION OF SELECT BOX &lt;Action of Job> => SHOW CORRESPONDING TEXTAREA&#xd;
        $("#listActionJob").change(function() {&#xd;
            $("#showHideQueryForm").show();&#xd;
            var valueSelect = $("#listActionJob option:selected").val()&#xd;
            if (valueSelect == "runQuery") {&#xd;
                showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
            } else if (valueSelect == "runOther") {&#xd;
                showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 1, "#showHideDbexecVariablesForm": 1, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
            } else if (valueSelect == "runCommand") {&#xd;
                showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 1, "#showHideFormatForm": 1, "#showHideFetchactionForm": 0})&#xd;
            } else if (valueSelect == "runFetchAction") {&#xd;
                showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 1})&#xd;
            }&#xd;
        });&#xd;
&#xd;
        // VIEW SAMPLE DATA&#xd;
        $('.sample div').each(function(event) {&#xd;
            $(this).click(function() {&#xd;
                $(this).parent('.sample').children('textarea').toggle()&#xd;
            })&#xd;
        }); &#xd;
&#xd;
        // SHOW GROUP KEY TEXT OF SUBTYPED WITH CASE SENDTYPE IS SUBTYPED, IF SENDTYPE IS STORE => HIDE GROUP KEY TEXT&#xd;
        $("#groupChart").hide();&#xd;
        $("#listSendType").change(function() {&#xd;
            var valueSelect = $("#listSendType option:selected").val()&#xd;
            if (valueSelect == "Subtyped") {&#xd;
                $("#groupChartText").removeAttr("disabled");&#xd;
            } else {&#xd;
                $("#groupChartText").attr("disabled","disabled");&#xd;
            }&#xd;
        });&#xd;
&#xd;
        // >>>>>>>>>> BEGIN: PROCESS CREATE CHART OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
        // CLICK BUTTON ADD AT CHART FORM&#xd;
        $(document).on('click', '#updateChartInfo', function(event){&#xd;
//        $('#updateChartInfo').click(function(event) {&#xd;
&#xd;
            var createChartFlg = 1;&#xd;
&#xd;
            // clear Message&#xd;
            $("#messageChart").html("")&#xd;
            $("#messageChartGroup").html("")&#xd;
            $("#messageChartType").html("")&#xd;
            $("#messageChartName").html("")&#xd;
            $("#messageChartColumn").html("")&#xd;
&#xd;
            var group = ""&#xd;
            // VALIDATE: IF SENDTYPE IS SUBTYPED, MUST BE ENTER DATA IN INPUT TEXT (id="groupChartText")&#xd;
            if ($("#listSendType").val() == 'Subtyped') {&#xd;
                group = $.trim($('#groupChartText').val());&#xd;
                if (group == "") {&#xd;
                    setErrorMessage('err_chart_group','#messageChartGroup')&#xd;
                    $('#groupChartText').focus();&#xd;
                    createChartFlg = 0;&#xd;
                }&#xd;
            }&#xd;
&#xd;
            // VALIDATE TYPE, NAME AND CHART COLUMNS (MUST BE DIFFERENT EMPTY)&#xd;
            var chartType = $.trim($('#listChartType').val());&#xd;
            var chartName = replaceAllString($.trim($('#nameChartText').val()), "'", "");&#xd;
            var chartColumns = $('#chartColumnsText').val();&#xd;
            var hintColumns = $('#hintColumnsText').val();&#xd;
            if (chartType == "") {&#xd;
                setErrorMessage('err_chart_type','#messageChartType');&#xd;
                $('#listChartType').focus();&#xd;
                createChartFlg = 0;&#xd;
            }&#xd;
            if (chartName == "") {&#xd;
                setErrorMessage('err_chart_name','#messageChartName')&#xd;
                $('#chartName').focus();&#xd;
                createChartFlg = 0;&#xd;
            }&#xd;
            if (chartColumns == "") {&#xd;
                setErrorMessage('err_chart_column','#messageChartColumn')&#xd;
                $('#chartColumnsText').focus();&#xd;
                createChartFlg = 0;&#xd;
            }&#xd;
            &#xd;
            if(0==createChartFlg){&#xd;
                return;&#xd;
            }&#xd;
&#xd;
            // CREATE MAP DATA FROM INFORMATIONS WHICH ENTERD IN CHART FORM&#xd;
            chartColumns = $.parseJSON(standardRoot(chartColumns))&#xd;
            var inputMaps = {}&#xd;
            if (hintColumns == "") {&#xd;
                inputMaps = {&#xd;
                    'group': group,&#xd;
                    'type': chartType,&#xd;
                    'name': chartName,&#xd;
                    'chart_columns': chartColumns,&#xd;
                }&#xd;
            } else {&#xd;
                hintColumns = $.parseJSON(standardRoot(hintColumns))&#xd;
                inputMaps = {&#xd;
                    'group': group,&#xd;
                    'type': chartType,&#xd;
                    'name': chartName,&#xd;
                    'chart_columns': chartColumns,&#xd;
                    'hint_columns': hintColumns&#xd;
                }&#xd;
            }&#xd;
&#xd;
            // CHECK THE EXITSTENCE OF NEW CHART OBJECT IN MAP "charts", IF EXITS => UPDATE, ELSE => ADD&#xd;
            var keyChart = group + "_" + chartType + "_" + chartName&#xd;
            if (checkKeyDupl(keyChart, charts)) {&#xd;
                var conf_update = confirm(getMessage("msg_exist_chart"))&#xd;
                &#xd;
                if (conf_update) {&#xd;
                    var rows = document.getElementById('chartTable').rows&#xd;
                    for (var i = 1; i &lt; rows.length; i++) {&#xd;
                        var tmp0 = rows[i].cells[0].innerText || rows[i].cells[0].textContent&#xd;
                        var tmp1 = rows[i].cells[1].innerText || rows[i].cells[1].textContent&#xd;
                        var tmp2 = rows[i].cells[2].innerText || rows[i].cells[2].textContent&#xd;
                        var key2remove = $.trim(tmp0) + '_' + $.trim(tmp1) + '_' + $.trim(tmp2)&#xd;
                        if (keyChart == key2remove) {&#xd;
                            rows[i].cells[0].innerText = group&#xd;
                            rows[i].cells[0].textContent = group&#xd;
                            rows[i].cells[1].innerText = chartType&#xd;
                            rows[i].cells[1].textContent = chartType&#xd;
                            rows[i].cells[2].innerText = chartName&#xd;
                            rows[i].cells[2].textContent = chartName&#xd;
                            rows[i].cells[3].innerText = chartColumns&#xd;
                            rows[i].cells[3].textContent = chartColumns&#xd;
                            rows[i].cells[4].innerText = hintColumns&#xd;
                            rows[i].cells[4].textContent = hintColumns&#xd;
                            setMessage('msg_chart_update','#messageChart')&#xd;
                            break&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
            } else {&#xd;
                var table = document.getElementById('chartTable')&#xd;
                var drawMap = {&#xd;
                    'group': group,&#xd;
                    'type': chartType,&#xd;
                    'name': chartName,&#xd;
                    'chart_columns': chartColumns,&#xd;
                    'hint_columns': hintColumns&#xd;
                }&#xd;
&#xd;
                var tr = createTrAppend(drawMap, 'chartTable')&#xd;
                tr.appendChild(createTdAction())&#xd;
&#xd;
                $("#inputChart").before(tr);&#xd;
//                table.appendChild(tr)&#xd;
&#xd;
                setMessage('msg_chart_add','#messageChart')&#xd;
            }&#xd;
            // UPDATE MAP "charts"&#xd;
            charts[keyChart] = inputMaps&#xd;
            // SET CHART FORM TO INIT&#xd;
            $('#groupChartText').val('')&#xd;
            $('#listChartType').val('');&#xd;
            $('#nameChartText').val('');&#xd;
            $('#chartColumnsText').val('');&#xd;
            $('#hintColumnsText').val('');&#xd;
            if ($('#listSendType').val() == 'Subtyped') {&#xd;
                $("#groupChartText").prop('disabled', false)&#xd;
            }&#xd;
            $("#listChartType").prop('disabled', false)&#xd;
            $("#nameChartText").prop('disabled', false)&#xd;
        });&#xd;
&#xd;
        // CLICK DELETE A ROW AT CHART INFORMATION TABLE&#xd;
        $(document).off('click', '#chartTable  .delete_btn')&#xd;
        $(document).on('click', '#chartTable  .delete_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var conf = confirm(getMessage('msg_delete_chart'))&#xd;
            if (conf) {&#xd;
                var rowDeleted = deleteRow(this, 'chartTable')&#xd;
                var tmp0 = rowDeleted.cells[0].innerText || rowDeleted.cells[0].textContent&#xd;
                var tmp1 = rowDeleted.cells[1].innerText || rowDeleted.cells[1].textContent&#xd;
                var tmp2 = rowDeleted.cells[2].innerText || rowDeleted.cells[2].textContent&#xd;
                var keyDeleted = tmp0 + '_' + tmp1 + '_' + tmp2&#xd;
                delete charts[keyDeleted]&#xd;
            }&#xd;
        });&#xd;
&#xd;
        // CLICK EDIT A ROW AT CHART INFORMATION TABLE&#xd;
        $(document).on('click', '#chartTable  .edit_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var row = this.parentNode.parentNode&#xd;
            var groupChart_txt = row.cells[0].innerText || row.cells[0].textContent&#xd;
            $("#groupChartText").val(groupChart_txt)&#xd;
            var listChartType_txt = row.cells[1].innerText || row.cells[1].textContent&#xd;
            $("#listChartType").val(listChartType_txt.trim())&#xd;
            var nameChart_txt = row.cells[2].innerText || row.cells[2].textContent&#xd;
            $('#nameChartText').val(nameChart_txt);&#xd;
            var chartColumns_txt = row.cells[3].innerText || row.cells[3].textContent&#xd;
            $('#chartColumnsText').val(chartColumns_txt);&#xd;
            var hintColumns_txt = row.cells[4].innerText || row.cells[4].textContent&#xd;
            $('#hintColumnsText').val(hintColumns_txt);&#xd;
            $("#groupChartText").prop('disabled', true)&#xd;
            $("#listChartType").prop('disabled', true)&#xd;
            $("#nameChartText").prop('disabled', true)&#xd;
        });&#xd;
        // >>>>>>>>>> END: PROCESS CREATE CHART OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
&#xd;
        // >>>>>>>>>> BEGIN: PROCESS CREATE PARAMS OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
        // CLICK ADD IN JOB PARAMS FORM&#xd;
        $(document).on('click', '#updateParamOfJob', function(event){&#xd;
//        $('#updateParamOfJob').click(function() {&#xd;
&#xd;
            var createParamsFlg = 1;&#xd;
&#xd;
            $('#messageParams').html("")&#xd;
            $('#messageParamsValue').html("")&#xd;
            $('#messageParamsName').html("")&#xd;
&#xd;
            // 4.17.1. VALIDATE: JOB PARAMS NAME AND JOB PARAMS VALUE MUST BE DIFFERENT EMPTY&#xd;
            var jobParamName = replaceAllString($('#nameJobText').val(), "'", "");&#xd;
            jobParamName = replaceAllString(jobParamName, "\"", "");&#xd;
            var jobParamVal = $('#valueJobText').val();&#xd;
            if (jobParamName == "") {&#xd;
                setErrorMessage("err_param_name", "#messageParamsName")&#xd;
                $('#nameJobText').focus();&#xd;
                createParamsFlg = 0;&#xd;
            }&#xd;
            if (jobParamVal == "") {&#xd;
                setErrorMessage("err_param_value", "#messageParamsValue")&#xd;
                $('#valueJobText').focus();;&#xd;
                createParamsFlg = 0;&#xd;
            }&#xd;
            &#xd;
            if(0==createParamsFlg){&#xd;
                return;&#xd;
            }&#xd;
&#xd;
            // CHECK THE EXITSTENCE OF JOB PARAMS IN MAP "jobParams", IF EXITS => UPDATE, ELSE => ADD&#xd;
            if (checkKeyDupl(jobParamName, jobParams)) {&#xd;
                var conf_update = confirm(getMessage('msg_exist_params'))&#xd;
                if (conf_update) {&#xd;
                    var rows = document.getElementById('paramJobTable').rows&#xd;
                    for (var i = 0; i &lt; rows.length; i++) {&#xd;
						var tmp0 = rows[i].cells[0].innerText || rows[i].cells[0].textContent&#xd;
                        var key2remove = $.trim(tmp0)&#xd;
                        if (key == key2remove) {&#xd;
                            rows[i].cells[0].innerText = jobParamName&#xd;
                            rows[i].cells[0].textContent = jobParamName&#xd;
                            rows[i].cells[1].innerText = $.trim(jobParamVal)&#xd;
                            rows[i].cells[1].textContent = $.trim(jobParamVal)&#xd;
                            setMessage("msg_param_update","#messageParams")&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
            } else {&#xd;
                var inputMaps = {&#xd;
                    'paramName': jobParamName,&#xd;
                    'paramVal': jobParamVal&#xd;
                }&#xd;
                var table = document.getElementById('paramJobTable')&#xd;
                var tr = createTrAppend(inputMaps, 'paramJobTable')&#xd;
                tr.appendChild(createTdAction())&#xd;
&#xd;
                $("#inputParams").before(tr);&#xd;
//                table.appendChild(tr)&#xd;
                setMessage("msg_param_add", "#messageParams")&#xd;
&#xd;
            };&#xd;
&#xd;
            // SET JOB PARAMS FORMS TO INIT AND UPDATE MAP "jobParams"&#xd;
            $('#nameJobText').prop('disabled', false)&#xd;
            $("#nameJobText").val('')&#xd;
            $('#valueJobText').val('');&#xd;
            var jobParamValAft = standardParams(jobParamVal)&#xd;
            jobParams[jobParamName] = jobParamValAft&#xd;
        });&#xd;
&#xd;
        // CLICK DELETE IN PARAMS JOB TABLE&#xd;
        $(document).on('click', '#paramJobTable  .delete_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var conf = confirm(getMessage('msg_delete_params'))&#xd;
            if (conf) {&#xd;
                var rowDeleted = deleteRow(this, "paramJobTable")&#xd;
                var keyDeleted = rowDeleted.cells[0].innerText || rowDeleted.cells[0].textContent&#xd;
                delete jobParams[keyDeleted]&#xd;
            }&#xd;
        });&#xd;
&#xd;
        // CLICK EDIT IN PARAMS JOB TABLE&#xd;
        $(document).on('click', '#paramJobTable  .edit_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var row = this.parentNode.parentNode&#xd;
            var nameJob_txt = row.cells[0].innerText || row.cells[0].textContent&#xd;
            $("#nameJobText").val(nameJob_txt)&#xd;
            var valueJob_txt = row.cells[1].innerText || row.cells[1].textContent&#xd;
            $('#valueJobText').val(valueJob_txt);&#xd;
            $('#nameJobText').prop('disabled', true)&#xd;
        });&#xd;
        // >>>>>>>>>> END: PROCESS CREATE PARAMS OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
&#xd;
        // >>>>>>>>>> BEGIN: PROCESS CREATE INSTANCE OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
        // CLICK BUTTON "ADD TO LIST INSTANCE OF JOB"&#xd;
        &#xd;
        function checkInstanceScheduleFormat(schedule){&#xd;
            if(schedule.match(/^[0-9]{1,}$/)){&#xd;
                return true;&#xd;
            }else if(schedule.match(/^[0-9]{1,}[i]$/)){&#xd;
                return true;&#xd;
            }else if("now"==schedule || "NOW"==schedule){&#xd;
                return true;&#xd;
            }else{&#xd;
                var splitSchedule = schedule.split(" ");&#xd;
                &#xd;
                if(6!=splitSchedule.length){&#xd;
                    return false;&#xd;
                }&#xd;
                for(var i=0;i&lt;splitSchedule.length;i++){&#xd;
                    &#xd;
                    var splitSchedule2 = splitSchedule[i].split(",");&#xd;
                    for(var j=0;j&lt;splitSchedule2.length;j++){&#xd;
                        if(!splitSchedule2[j].match(/^[0-9]{1,2}$/) &amp;&amp; !splitSchedule2[j].match(/^[[0-9]{1,2}|\*][\/|\-][0-9]{1,2}$/) &amp;&amp; !splitSchedule2[j].match(/^\?|\*$/)){&#xd;
                            return false;&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
                return true;&#xd;
            }&#xd;
        }&#xd;
        &#xd;
        $(document).on('click', '#updateInstance', function(event){&#xd;
        &#xd;
            var createInstanceFlg = 1;&#xd;
            &#xd;
            // clear message&#xd;
            $("#messageInstances").html("");&#xd;
            $("#messageInstanceName").html("");&#xd;
            $("#messageInstanceSchedule").html("");&#xd;
        &#xd;
            $('#nameInstanceText').prop('disabled', false)&#xd;
            $('#valueInstanceText').val('')&#xd;
            $('#nameInstanceText').val('')&#xd;
            //Job Instance process&#xd;
            var instanceName = replaceAllString($('#instanceNameText').val(), "'", "");&#xd;
            instanceName = replaceAllString(instanceName, "\"", "");&#xd;
&#xd;
            var instanceSchedule = $('#scheduleText').val();&#xd;
&#xd;
            var instanceHostId = $('#hostIdText').val();&#xd;
            var instanceSid = $('#sidText').val();&#xd;
            &#xd;
            if (instanceName == "") {&#xd;
                setErrorMessage("err_instance_name","#messageInstanceName");&#xd;
                $('#instanceNameText').focus();&#xd;
                createInstanceFlg = 0;&#xd;
            }&#xd;
            if (instanceSchedule == "") {&#xd;
                setErrorMessage("err_instance_schedule", "#messageInstanceSchedule")&#xd;
                createInstanceFlg = 0;&#xd;
            }else if(!checkInstanceScheduleFormat(instanceSchedule)){&#xd;
                setErrorMessage("err_instance_schedule_format", "#messageInstanceSchedule")&#xd;
                createInstanceFlg = 0;&#xd;
            }else{&#xd;
                jobInstanceValue['schedule'] = instanceSchedule&#xd;
            }&#xd;
&#xd;
            if(0==createInstanceFlg){&#xd;
                return;&#xd;
            }&#xd;
            jobInstanceValue['params'] = '["dbHostId":"' + instanceHostId + '", "dbSid":"' + instanceSid + '"]';&#xd;
&#xd;
            if (checkKeyDupl(instanceName, jobInstance)) {&#xd;
                var conf_update = confirm(getMessage('msg_exist_instance'))&#xd;
                if (conf_update) {&#xd;
                    var rows = document.getElementById('updateJobInstanceTable').rows&#xd;
                    for (var i = 0; i &lt; rows.length; i++) {&#xd;
						var tmp0 = rows[i].cells[0].innerText || rows[i].cells[0].textContent&#xd;
                        var key2remove = $.trim(tmp0)&#xd;
                        if (key == key2remove) {&#xd;
                            rows[i].cells[0].innerText = instanceName&#xd;
                            rows[i].cells[0].textContent = instanceName&#xd;
                            rows[i].cells[1].innerText = instanceHostId&#xd;
                            rows[i].cells[1].textContent = instanceHostId&#xd;
                            rows[i].cells[2].innerText = instanceSid&#xd;
                            rows[i].cells[2].textContent = instanceSid&#xd;
                            rows[i].cells[3].innerText = instanceSchedule&#xd;
                            rows[i].cells[3].textContent = instanceSchedule&#xd;
                            setMessage("msg_instance_update","#messageInstances");&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
&#xd;
            } else {&#xd;
                // delete add boxes&#xd;
                setMessage("msg_instance_add","#messageInstances");&#xd;
                var inputMaps = {&#xd;
                    'instanceName': instanceName,&#xd;
                    'instanceHostId': instanceHostId,&#xd;
                    'instanceSid': instanceSid,&#xd;
                    'instanceSchedule': instanceSchedule,&#xd;
                }&#xd;
                var table = document.getElementById('updateJobInstanceTable')&#xd;
                var tr = createTrAppend(inputMaps, 'updateJobInstanceTable')&#xd;
                tr.appendChild(createTdAction())&#xd;
&#xd;
                $("#inputInstance").before(tr);&#xd;
&#xd;
            }&#xd;
&#xd;
            jobInstance[instanceName] = jobInstanceValue&#xd;
            paramInstance = {}&#xd;
            jobInstanceValue = {}&#xd;
            $('#instanceNameText').val("");&#xd;
            $('#scheduleText').val("");&#xd;
            $('#hostIdText').val("");&#xd;
            $('#sidText').val("");&#xd;
            $("#instanceNameText").prop('disabled', false)&#xd;
&#xd;
        });&#xd;
        $(document).off('click', '#updateJobInstanceTable .delete_btn')&#xd;
        $(document).on('click', '#updateJobInstanceTable .delete_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var conf = confirm(getMessage('msg_delete_instance'))&#xd;
            if (conf) {&#xd;
                var rowDeleted = deleteRow(this, "updateJobInstanceTable")&#xd;
                var keyDeleted = rowDeleted.cells[0].innerText || rowDeleted.cells[0].textContent&#xd;
                delete jobInstance[keyDeleted]&#xd;
            }&#xd;
        });&#xd;
        $(document).on('click', '#updateJobInstanceTable .edit_btn', function(event) {&#xd;
            event.preventDefault();&#xd;
            var row = this.parentNode.parentNode&#xd;
            var tmp0 = row.cells[0].innerText || row.cells[0].textContent&#xd;
            var instaneNameTmp = $.trim(tmp0)&#xd;
            var tmp1 = row.cells[1].innerText || row.cells[1].textContent&#xd;
            var instaneHostIdTmp = $.trim(tmp1)&#xd;
            var tmp2 = row.cells[2].innerText || row.cells[2].textContent&#xd;
            var instaneSidTmp = $.trim(tmp2)&#xd;
            var tmp3 = row.cells[3].innerText || row.cells[3].textContent&#xd;
            var instaneSchedTmp = $.trim(tmp3)&#xd;
&#xd;
            $("#instanceNameText").val(instaneNameTmp)&#xd;
            $("#hostIdText").val(instaneHostIdTmp)&#xd;
            $("#sidText").val(instaneSidTmp)&#xd;
            $("#scheduleText").val(instaneSchedTmp)&#xd;
&#xd;
            $("#instanceNameText").prop('disabled', true)&#xd;
            var tmp1 = row.cells[1].innerText || row.cells[1].textContent&#xd;
            var instanceParamTmp = $.trim(tmp1)&#xd;
                        var paramsObject = {}&#xd;
                        if (instanceParamTmp != "") {&#xd;
                            paramsObject = $.parseJSON(instanceParamTmp);&#xd;
                        }&#xd;
        });&#xd;
        // >>>>>>>>>> END: PROCESS CREATE INSTANCE OBJECT &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xd;
&#xd;
&#xd;
        /**&#xd;
         * deleteRow: delete a row from table&#xd;
         * @param row: row delete&#xd;
         * @param tableId: id of table&#xd;
         * @return rowDeleted&#xd;
        */&#xd;
        function deleteRow(row, tableId) {&#xd;
            var idx = row.parentNode.parentNode.rowIndex&#xd;
            var rowDeleted = row.parentNode.parentNode&#xd;
            $(row).closest('tr').remove();&#xd;
            return rowDeleted&#xd;
        }&#xd;
&#xd;
        /**&#xd;
         * checkKeyDupl: check the existence of key in map object&#xd;
         * @param keyCheck: key&#xd;
         * @param obj: map object&#xd;
         * @return boolean (true if exist, false if not exist)&#xd;
        */&#xd;
        function checkKeyDupl(keyCheck, obj) {&#xd;
            for (key in obj) {&#xd;
                if (key == keyCheck) {&#xd;
                    return true&#xd;
                }&#xd;
            }&#xd;
            return false&#xd;
        }&#xd;
&#xd;
        /**&#xd;
         * createTdAction: create td of table with 2 button "DELETE" and "EDIT"&#xd;
         * @return td_action&#xd;
        */&#xd;
        function createTdAction() {&#xd;
            var td_action = document.createElement('td')&#xd;
            td_action.setAttribute('class', 'td_button')&#xd;
            var del_btn = document.createElement('input')&#xd;
            var edit_btn = document.createElement('input')&#xd;
            del_btn.setAttribute('type', 'button')&#xd;
            del_btn.setAttribute('class', 'delete_btn button')&#xd;
            del_btn.setAttribute('value', 'Delete')&#xd;
            del_btn.setAttribute('style', 'width:50px')&#xd;
&#xd;
            edit_btn.setAttribute('type', 'button')&#xd;
            edit_btn.setAttribute('class', 'edit_btn button')&#xd;
            edit_btn.setAttribute('value', 'Edit')&#xd;
            edit_btn.setAttribute('style', 'width:50px')&#xd;
&#xd;
            td_action.appendChild(del_btn)&#xd;
            td_action.appendChild(edit_btn)&#xd;
            return td_action&#xd;
        }&#xd;
&#xd;
        /**&#xd;
         * createTrAppend: process append rows (each row corrensponding an element of map data) into table&#xd;
         * @param jsonObj: map data&#xd;
         * @return tr&#xd;
        */&#xd;
        function createTrAppend(jsonObj) {&#xd;
            var tr = document.createElement('tr')&#xd;
            for (key in jsonObj) {&#xd;
                var td = document.createElement('td')&#xd;
                var td_text = document.createTextNode(jsonObj[key])&#xd;
                td.appendChild(td_text)&#xd;
                tr.appendChild(td)&#xd;
            }&#xd;
            return tr&#xd;
        }&#xd;
    });&#xd;
&#xd;
    // CLICK "SAVE" BUTTON&#xd;
    $("#updateJobInfo").click(function() {&#xd;
        doSend('save')&#xd;
    });&#xd;
    &#xd;
    // CLICK "RUN" BUTTON&#xd;
    $("#runTest").click(function() {&#xd;
        $('#testResult').html(getMessage('msg_run_test'));&#xd;
        doSend('run');&#xd;
    });&#xd;
    &#xd;
    // CLICK "BACK TO MAIN MENU" BUTTON&#xd;
    $("#backToMain").click(function() {&#xd;
        window.location.href = "/xwiki/bin/view/WiperDog/WebHome"&#xd;
    });&#xd;
&#xd;
    /**&#xd;
     * init(): get servlet to be used and create init data of init screen&#xd;
     * @param JobDeclared: read / write job file, params file and instance file&#xd;
     * @param ImportInstanceServlet: read / write / export csv file&#xd;
    */&#xd;
    function init() {&#xd;
        // Get JobDeclared servlet&#xd;
        JobDeclared = getServlet('JobDeclared')&#xd;
&#xd;
        // Get ImportInstanceServlet servlet&#xd;
        ImportInstanceServlet = getServlet('importinstances')&#xd;
&#xd;
        var actionOfJob = ''&#xd;
        &#xd;
        $(".osInfoForm").hide();&#xd;
        showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0});&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * generateActionJob: generate list action of job&#xd;
     * @param typeMonitoring: monitoring type was selected&#xd;
     * @output all actions of job were filled to select box "Action of Job"&#xd;
    */&#xd;
    function generateActionJob(typeMonitoring) {&#xd;
        var actionOfJob = ''&#xd;
        if(typeMonitoring == "@DB") {&#xd;
            // FILL ACTIONS PROCESS JOB TO SELECT BOX "listActionJob"&#xd;
            actionOfJob = '&lt;option id=\"showHideQuery\" value=\"runQuery\">Run Select Query&lt;/option>'&#xd;
            actionOfJob += '&lt;option id=\"showHideOther\" value=\"runOther\">Run Others Query&lt;/option>'&#xd;
            actionOfJob += '&lt;option id=\"showHideCommand\" value=\"runCommand\">Run Command&lt;/option>'&#xd;
            actionOfJob += '&lt;option id=\"showHideFetchAction\" value=\"runFetchAction\">Run FetchAction&lt;/option>'&#xd;
            $("#listActionJob").html(actionOfJob)&#xd;
&#xd;
            // DEFAULT: SHOW QUERY ACTION&#xd;
                showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
        } else if (typeMonitoring == "@SYS" || typeMonitoring == "@NET" || typeMonitoring == "Others") {&#xd;
            actionOfJob = ''&#xd;
            if (typeMonitoring == "Others") {&#xd;
                $("#dbTypeCbb").prop('disabled',false)&#xd;
                actionOfJob += '&lt;option id=\"showHideQuery\" value=\"runQuery\">Run Select Query&lt;/option>'&#xd;
                actionOfJob += '&lt;option id=\"showHideOther\" value=\"runOther\">Run Others Query&lt;/option>'&#xd;
            }&#xd;
                            &#xd;
            actionOfJob += '&lt;option id=\"showHideCommand\" value=\"runCommand\">Run Command&lt;/option>'&#xd;
            actionOfJob += '&lt;option id=\"showHideFetchAction\" value=\"runFetchAction\">Run FetchAction&lt;/option>'&#xd;
            $("#listActionJob").html(actionOfJob)&#xd;
            if (typeMonitoring == "Others") {&#xd;
                showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
            } else {&#xd;
                showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 1, "#showHideFormatForm": 1, "#showHideFetchactionForm": 0})&#xd;
            }&#xd;
        }&#xd;
    }    &#xd;
&#xd;
    /**&#xd;
     * getServlet: get servlet from GetServlet page&#xd;
     * @param paramsServlet: servlet name&#xd;
     * @return servlet&#xd;
    */&#xd;
    function getServlet(paramsServlet) {&#xd;
        var servlet&#xd;
        $.ajax({&#xd;
            type: "GET",&#xd;
            url: "/xwiki/bin/get/WiperDog/GetServlet?outputSyntax=plain&amp;name=" + paramsServlet,&#xd;
            async: false,&#xd;
            success: function(result) {&#xd;
                servlet = result&#xd;
            },&#xd;
            error: function(xhr, status, error) {&#xd;
                showErrorMsg(xhr, status, error)&#xd;
            }&#xd;
        });&#xd;
        return servlet&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * showHideControl: show or hide chart form, params form and instance form&#xd;
     * @param element: selector&#xd;
     * @param str: KEYEXPR, JOB PARAMS, JOB INSTANCES&#xd;
    */&#xd;
    function showHideControl(element,str) {&#xd;
        if(element.attr('id') == 'show') {&#xd;
            element.text('Show '+ str +' Form')&#xd;
            element.attr('id','hide')&#xd;
        } else {&#xd;
            element.text('Hide '+ str +' Form')&#xd;
            element.attr('id','show')&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * doSend: get all data from JobConfiguration monitor and send to servlet&#xd;
     * @param action: exportFromJobConfig, save or saveNRun&#xd;
    */&#xd;
    function doSend(action) {   &#xd;
        // resetErrorMessage&#xd;
		$("#messageValid").html("")&#xd;
		$("#messageDbtypeCbb").html("")&#xd;
		$("#messageJobnameText").html("")&#xd;
		$("#messageListActionJob").html("")&#xd;
		$("#messageQueryText").html("")&#xd;
		$("#messageDbexecText").html("")&#xd;
		$("#messageCommandText").html("")&#xd;
		$("#messageFormatText").html("")&#xd;
		$("#messageFetchactionText").html("")&#xd;
		$("#messageOsinfoText").html("")&#xd;
		$("#messageKeyexprRoot").html("")&#xd;
		$("#messageKeyexprUnit").html("")&#xd;
		$("#messageChartGroup").html("")&#xd;
		$("#messageChart").html("")&#xd;
		$("#messageChartType").html("")&#xd;
		$("#messageChartName").html("")&#xd;
		$("#messageChartColumn").html("")&#xd;
		$("#messageParams").html('')&#xd;
		$("#messageParamsName").html("")&#xd;
		$("#messageParamsValue").html("")&#xd;
		$('#messageInstances').html("");&#xd;
		$("#messageInstanceName").html("")&#xd;
		$("#messageInstanceSchedule").html("")&#xd;
		$("#messageQueryVariableText").html("")&#xd;
		$("#messageDbexecVariableText").html("")&#xd;
		$("#messageDest").html("")&#xd;
				    &#xd;
        var finalMapData = {}&#xd;
        checkValid = true&#xd;
        jobMap = {}&#xd;
&#xd;
        // Get job data information from JobConfiguration monitor&#xd;
        // ---- MONITORING TYPE, DB TYPE, JOB NAME, JOB FILE NAME, JOB CLASS NAME, COMMENT AND GROUP KEY&#xd;
        getInputDataJobInfo();&#xd;
&#xd;
        // ---- ACTION OF JOB: QUERY, DBEXEC, COMMAND, FETCHACTION&#xd;
        getInputDataActionOfJob();&#xd;
&#xd;
        // ---- ACCUMULATE, FINALLY&#xd;
        getInputDataAccumulate();&#xd;
&#xd;
        // ---- SENDTYPE, RESOURCEID, OSINFO, DEST&#xd;
        getInputDataSendDataInfo();&#xd;
&#xd;
        // ---- KEYEXPR&#xd;
        getInputDataKeyexpr();&#xd;
&#xd;
        // Set final data into finalMapData&#xd;
        finalMapData['COMMAND'] = "Write"&#xd;
        finalMapData['JOB'] = jobMap&#xd;
        finalMapData['PARAMS'] = jobParams&#xd;
        finalMapData['INSTANCES'] = jobInstance&#xd;
        // Send data request and corresponding action of it to servlet&#xd;
        if (checkValid) {&#xd;
            ajax_post_data_write(JobDeclared, function(result) {}, finalMapData, action)&#xd;
        }else{&#xd;
        	if('save'==action){&#xd;
        		$("#messageValid").html("&lt;p>" + getMessage("err_validation") + "&lt;/p>");&#xd;
        	}else if('run'==action){&#xd;
        		$("#testResult").html("&lt;p>" + getMessage("err_validation") + "&lt;/p>");&#xd;
        	}&#xd;
        }&#xd;
&#xd;
        if('save'==action){&#xd;
            $('html, body').animate({&#xd;
                scrollTop: 0&#xd;
            }, 'slow');&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * getInputDataJobInfo:&#xd;
     *  - get monitoringType, dbType, jobName, jobFileName, jobClassName, comment and groupKey from JobConfiguration monitor&#xd;
     *  - validate input data: dbType, jobName can not be empty&#xd;
     * output: set these values into jobMap&#xd;
    */&#xd;
    function getInputDataJobInfo() {&#xd;
        jobMap['monitoringType'] = document.getElementById('listMonitoring').value&#xd;
        if(""==jobMap['monitoringType'] || null==jobMap['monitoringType']){&#xd;
        	setErrorMessage("err_monitoringtype","#messageMonitoringtype");&#xd;
        	checkValid = false;&#xd;
        }&#xd;
        &#xd;
        var dbType&#xd;
        if ((document.getElementById('dbTypeCbb').value != "") || (jobMap['monitoringType'] != "@DB")) {&#xd;
            dbType = document.getElementById('dbTypeCbb').value&#xd;
            jobMap['dbType'] = dbType&#xd;
        } else {&#xd;
            setErrorMessage("err_dbtype","#messageDbtypeCbb");&#xd;
            checkValid = false&#xd;
        }&#xd;
        var jobName&#xd;
        if (document.getElementById('jobNameText').value.trim() != "") {&#xd;
            jobName = document.getElementById('jobNameText').value.trim()&#xd;
            jobMap['jobName'] = jobName&#xd;
        } else {&#xd;
            setErrorMessage("err_jobname", "#messageJobnameText");&#xd;
            checkValid = false&#xd;
        }&#xd;
        var jobFileName&#xd;
        if (document.getElementById('jobFileNameText').value.trim() != "") {&#xd;
            jobFileName = document.getElementById('jobFileNameText').value.trim()&#xd;
            jobMap['jobFileName'] = jobFileName&#xd;
        }else{&#xd;
            jobMap['jobFileName'] = jobName&#xd;
        }&#xd;
        var jobClassName&#xd;
        if (document.getElementById('jobClassNameText').value.trim() != "") {&#xd;
            jobClassName = document.getElementById('jobClassNameText').value.trim()&#xd;
            jobMap['jobClassName'] = jobClassName&#xd;
        }&#xd;
        var commentForJob&#xd;
        if (document.getElementById('commentForJobText').value.trim() != "") {&#xd;
            commentForJob = document.getElementById('commentForJobText').value.trim()&#xd;
            commentForJob = standardComment(commentForJob)&#xd;
            jobMap['commentForJob'] = commentForJob&#xd;
        }&#xd;
        var groupKey&#xd;
        if (document.getElementById('groupkeyText').value.trim() != "") {&#xd;
            groupKey = document.getElementById('groupkeyText').value.trim()&#xd;
            groupKey = standardGroupKey(groupKey)&#xd;
            jobMap['groupKey'] = groupKey&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * getInputDataActionOfJob:&#xd;
     *  - get action of job: query, dbexec, command and fetchaction from JobConfiguration monitor&#xd;
     *  - validate input data:&#xd;
     *    + if actionOfJob == "runQuery" then query must be valid&#xd;
     *    + if actionOfJob == "runOther" then dbexec must be valid&#xd;
     *    + if actionOfJob == "runCommand" then command must be valid&#xd;
     *    + if actionOfJob == "runFetchAction" then fetchaction must be valid&#xd;
     * output: set these values into jobMap&#xd;
    */&#xd;
    function getInputDataActionOfJob() {&#xd;
        var actionOfJob = document.getElementById('listActionJob').value&#xd;
&#xd;
        if(""==actionOfJob || null==actionOfJob){&#xd;
            setErrorMessage("err_listactionjob","#messageListActionJob")&#xd;
            checkValid = false;&#xd;
        }&#xd;
&#xd;
        if (actionOfJob == "runQuery") {&#xd;
            var query&#xd;
            if (document.getElementById('queryText').value.trim() != "") {&#xd;
                query = document.getElementById('queryText').value.trim()&#xd;
                jobMap['query'] = query&#xd;
            } else {&#xd;
                setErrorMessage("err_querytext","#messageQueryText")&#xd;
                checkValid = false&#xd;
            }&#xd;
            var queryVariable&#xd;
            if (document.getElementById('queryVariableText').value.trim() != "") {&#xd;
                queryVariable = checkMapTypeValidation(document.getElementById('queryVariableText').value.trim());&#xd;
                if(""==queryVariable){&#xd;
                    setErrorMessage("err_queryvariabletext","#messageQueryVariableText");&#xd;
                    checkValid = false;&#xd;
                }else{&#xd;
                    jobMap['queryVariable'] = standardGroupKey(queryVariable);&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
&#xd;
        if (actionOfJob == "runOther") {&#xd;
            var dbExec&#xd;
            if (document.getElementById('dbexecText').value.trim() != "") {&#xd;
                dbExec = document.getElementById('dbexecText').value.trim()&#xd;
                jobMap['dbExec'] = dbExec&#xd;
            } else {&#xd;
                setErrorMessage("err_dbexectext","#messageDbexecText");&#xd;
                checkValid = false&#xd;
            }&#xd;
            var dbExecVariable&#xd;
            if (document.getElementById('dbexecVariableText').value.trim() != "") {&#xd;
                dbExecVariable = checkMapTypeValidation(document.getElementById('dbexecVariableText').value.trim());&#xd;
                if(""==dbExecVariable){&#xd;
                    setErrorMessage("err_dbexecvariabletext","#messageDbexecVariableText");&#xd;
                    checkValid = false;&#xd;
                }else{&#xd;
                    jobMap['dbExecVariable'] = standardGroupKey(dbExecVariable);&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
&#xd;
        if (actionOfJob == "runCommand") {&#xd;
            var command&#xd;
            if (document.getElementById('commandText').value.trim() != "") {&#xd;
                command = document.getElementById('commandText').value&#xd;
                jobMap['command'] = command&#xd;
            } else {&#xd;
                setErrorMessage("err_commandtext","#messageCommandText");&#xd;
                checkValid = false&#xd;
            }&#xd;
            var format&#xd;
            if (document.getElementById('formatText').value.trim() != "") {&#xd;
                format = checkMapTypeValidation(document.getElementById('formatText').value.trim());&#xd;
                if(""==format){&#xd;
                    setErrorMessage("err_formattext","#messageFormatText");&#xd;
                    checkValid = false&#xd;
                }else{&#xd;
                    jobMap['format'] = standardRoot(format);&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
&#xd;
        if (actionOfJob == "runFetchAction") {&#xd;
            var fetchAction&#xd;
            if (document.getElementById('fetchactionText').value.trim() != "") {&#xd;
                fetchAction = document.getElementById('fetchactionText').value.trim()&#xd;
                fetchAction = standardClosure(fetchAction)&#xd;
                jobMap['fetchAction'] = fetchAction&#xd;
            } else {&#xd;
                setErrorMessage("err_fetchactiontext","#messageFetchactionText");&#xd;
                checkValid = false&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * getInputDataAccumulate: get accumulate and finally from JobConfiguration monitor&#xd;
     * output: set these values into jobMap&#xd;
    */&#xd;
    function getInputDataAccumulate() {&#xd;
        var accumulate&#xd;
        if (document.getElementById('accumulateText').value.trim() != "") {&#xd;
            accumulate = document.getElementById('accumulateText').value.trim()&#xd;
            accumulate = standardClosure(accumulate)&#xd;
            jobMap['accumulate'] = accumulate&#xd;
        }&#xd;
&#xd;
        var finallyClosure&#xd;
        if (document.getElementById('finallyText').value.trim() != "") {&#xd;
            finallyClosure = document.getElementById('finallyText').value.trim()&#xd;
            finallyClosure = standardClosure(finallyClosure)&#xd;
            jobMap['finally'] = finallyClosure&#xd;
            finallyClosure = null&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * getInputDataSendDataInfo: get sendType, resourceId, osInfo and dest from JobConfiguration monitor&#xd;
     * output: set these values into jobMap&#xd;
    */&#xd;
    function getInputDataSendDataInfo() {&#xd;
        var sendTypeTxt = document.getElementById('listSendType').value&#xd;
        if (sendTypeTxt != null &amp;&amp; sendTypeTxt != "" &amp;&amp; sendTypeTxt != "slectDataType") {&#xd;
            jobMap['sendType'] = sendTypeTxt&#xd;
        }&#xd;
        var resourceId&#xd;
        if (document.getElementById('resourceIdText').value.trim() != "") {&#xd;
            resourceId = document.getElementById('resourceIdText').value.trim()&#xd;
            jobMap['resourceId'] = resourceId&#xd;
        }&#xd;
&#xd;
        var osInfo&#xd;
        if (document.getElementById('osInfoText').value.trim() != "") {&#xd;
            osInfo = document.getElementById('osInfoText').value.trim()&#xd;
            if (osInfo != "parameters.osinfo") {&#xd;
                try {&#xd;
                    var osInfoMap&#xd;
                    var jsonStrOSInfo = standardRoot(osInfo)&#xd;
                    jsonStrOSInfo = replaceAllString(jsonStrOSInfo, "[", "{")&#xd;
                    jsonStrOSInfo = replaceAllString(jsonStrOSInfo, "]", "}")&#xd;
&#xd;
                    osInfoMap = $.parseJSON(jsonStrOSInfo)&#xd;
                    if ((osInfoMap['host'] == null) || (osInfoMap['os'] == null)) {&#xd;
                        checkValid = false&#xd;
                        setErrorMessage("err_osinfotext","#messageOsinfoText");&#xd;
                    } else {&#xd;
                        osInfo = standardRoot(osInfo)&#xd;
                    }&#xd;
                } catch (ex) {&#xd;
                    checkValid = false&#xd;
                    setErrorMessage("err_osinfotext","#messageOsinfoText");&#xd;
                }     &#xd;
            }&#xd;
            jobMap['osInfo'] = osInfo&#xd;
        }&#xd;
&#xd;
        var dest&#xd;
        if (document.getElementById('destText').value.trim() != "") {&#xd;
            dest = document.getElementById('destText').value.trim();&#xd;
            &#xd;
            if ("parameters.dest" != dest){&#xd;
                //dest = checkMapTypeValidation(dest);&#xd;
                dest = standardDest(dest);&#xd;
                if(""==dest){&#xd;
                    checkValid=false;&#xd;
                    setErrorMessage("err_dest","#messageDest");&#xd;
                }else{&#xd;
                    jobMap['dest'] = dest;&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * getInputDataKeyexpr: get keyExpr from JobConfiguration monitor&#xd;
     * output: set these values into jobMap&#xd;
    */&#xd;
    function getInputDataKeyexpr() {&#xd;
        var KEYEXPR = {}&#xd;
        var _rootStr = ""&#xd;
        var _root&#xd;
        if (document.getElementById('rootText').value != "") {&#xd;
            _rootStr = standardRoot(document.getElementById('rootText').value)&#xd;
            if (_rootStr.indexOf(":") > -1) {&#xd;
                if (_rootStr.indexOf("[") == 0) {&#xd;
                    _rootStr = "{" + _rootStr.substring(1)&#xd;
                    _rootStr = _rootStr.substring(0, _rootStr.length - 1) + "}"&#xd;
                } else {&#xd;
                    _rootStr = "{" + rootText + "}"&#xd;
                }&#xd;
            }&#xd;
&#xd;
            try {&#xd;
                _root = $.parseJSON(_rootStr)&#xd;
            } catch (ex) {&#xd;
                checkValid = false&#xd;
                setErrorMessage("err_keyexpr_root","#messageKeyexprRoot");&#xd;
            }&#xd;
            KEYEXPR['_root'] = _root&#xd;
        }&#xd;
&#xd;
        var _sequence = ""&#xd;
        if (document.getElementById('sequenceText').value != "") {&#xd;
            _sequence = standardRoot(document.getElementById('sequenceText').value)&#xd;
            KEYEXPR['_sequence'] = _sequence&#xd;
        }&#xd;
&#xd;
        var _unit = ""&#xd;
        if (document.getElementById('unitText').value != "") {&#xd;
            _unit = standardRoot(document.getElementById('unitText').value);&#xd;
            _unitResult = checkMapTypeValidation(_unit);&#xd;
            if(""==_unitResult){&#xd;
                setErrorMessage("err_keyexpr_unit","#messageKeyexprUnit");&#xd;
                checkValid = false;&#xd;
            }else{&#xd;
                KEYEXPR['_unit'] = _unitResult;&#xd;
            }&#xd;
        }&#xd;
        KEYEXPR['_chart'] = {}&#xd;
        if (Object.keys(charts).length != 0) {&#xd;
            KEYEXPR['_chart'] = charts&#xd;
        }&#xd;
        jobMap['KEYEXPR'] = KEYEXPR&#xd;
    }&#xd;
    &#xd;
    /** &#xd;
     * checkMapTypeValidation&#xd;
     * @param value&#xd;
     * @return result&#xd;
    **/&#xd;
    function checkMapTypeValidation(value){&#xd;
&#xd;
        var result = "";&#xd;
        var split = value.split(",");&#xd;
        for(var i=0; i&lt;split.length; i++){&#xd;
            if(0!=i){&#xd;
                result += ",";&#xd;
            }&#xd;
            if (split[i].indexOf(":") == -1) {&#xd;
                return "";&#xd;
            }else{&#xd;
                var tmp = "";&#xd;
                tmp = replaceAllString(split[i], "\n", "");&#xd;
                result += replaceAllString(tmp, "\t", "");&#xd;
            }&#xd;
        }&#xd;
        &#xd;
        return result;&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * ajax_post_data_write: send information of job (mapJob, mapParams, mapInstances) to servlet => process create / write / update&#xd;
     * file corresponding with action&#xd;
     * @param domainURL: servlet&#xd;
     * @param data: {"COMMAND": "write", "JOB": mapJob, "PARAMS": mapParams, "INSTANCES": mapInstances}&#xd;
     * @param action: exportFromJobConfig, save, saveNRun&#xd;
    */&#xd;
    function ajax_post_data_write(domainURL, callback, data, action) {&#xd;
        data['action'] = action&#xd;
&#xd;
        // Send data to servlet&#xd;
        $.ajax({&#xd;
            type: "POST",&#xd;
            crossDomain: true,&#xd;
            url: domainURL,&#xd;
            dataType: 'json',&#xd;
            data: JSON.stringify(data),&#xd;
            success: function(result) {&#xd;
                var statusExecute = result.status&#xd;
                var messageExecute = result.message&#xd;
&#xd;
                if('save'==action){&#xd;
	                if (statusExecute == "OK") {&#xd;
                        $("#messageValid").html("&lt;b>" + messageExecute + "&lt;/b>")&#xd;
	                } else if (statusExecute == "failed") {&#xd;
                        $("#messageValid").html("&lt;p>Can not create !!!&lt;/p>&lt;b>Reason: &lt;/b>&lt;p>" + messageExecute + "&lt;/p>")&#xd;
	                }&#xd;
                }else if('run'==action){&#xd;
                        $("#testResult").html("&lt;b>" + statusExecute + "&lt;/b>")&#xd;
                        $("#console").val(messageExecute)&#xd;
                }&#xd;
                callback(result)&#xd;
            },&#xd;
            error: function(xhr, status, error) {&#xd;
                showErrorMsg(xhr, status, error)&#xd;
                setErrorMessage("err_run_wiperdog","#messageValid");&#xd;
            }&#xd;
        });&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * standardComment:&#xd;
     *  - edit comment to standard before send to servlet&#xd;
     *  - add "/* *\/" in start and end of comment if not contains&#xd;
     * @param comment: string data receive from textarea "Comment for Job"&#xd;
     * @return standard commnent&#xd;
    */&#xd;
    function standardComment(comment) {&#xd;
        if (comment.indexOf("/*") == -1) {&#xd;
            comment = "/*\n" + comment&#xd;
        }&#xd;
        if (comment.indexOf("*/") == -1) {&#xd;
            comment = comment + "\n*/"&#xd;
        }&#xd;
        return comment&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * standardRoot:&#xd;
     *  - edit rootText to standard before send to servlet&#xd;
     *  - remove special char ({,},[,],",')&#xd;
     *  - if rootText not contains ":" => rootText is sample groupKey&#xd;
     *  - else split follow ":" => will have two child data sample groupKey&#xd;
     * @param rootText: string data receive from input "_root(key of data)"&#xd;
     * @return standard rootText&#xd;
    */&#xd;
    function standardRoot(rootText) {&#xd;
        rootText = replaceAllString(rootText, "\"", "")&#xd;
        rootText = replaceAllString(rootText, "'", "")&#xd;
        rootText = replaceAllString(rootText, "{", "\"")&#xd;
        rootText = replaceAllString(rootText, "}", "\"\"")&#xd;
        rootText = replaceAllString(rootText, "[", "\"")&#xd;
        rootText = replaceAllString(rootText, "]", "\"\"")&#xd;
&#xd;
        var ouputRoot = ""&#xd;
        if (rootText.indexOf(":") == -1) {&#xd;
            ouputRoot = standardGroupKey(rootText)&#xd;
        } else {&#xd;
            var lstRoot = rootText.split(",")&#xd;
            for (var i = 0; i &lt; lstRoot.length; i++) {&#xd;
                var lstColon = lstRoot[i].split(":")&#xd;
                for (var j = 0; j &lt; lstColon.length; j++) {&#xd;
                    ouputRoot += "\"" + lstColon[j].trim() + "\"" + ":"&#xd;
                }&#xd;
                ouputRoot = ouputRoot.substring(0, ouputRoot.length - 1)&#xd;
                ouputRoot += ","&#xd;
            }&#xd;
            ouputRoot = ouputRoot.substring(0, ouputRoot.length - 1)&#xd;
            ouputRoot = replaceAllString(ouputRoot, "\"\"\"\"\"", "\"]]")&#xd;
            ouputRoot = replaceAllString(ouputRoot, "\"\"\"", "\"]")&#xd;
            ouputRoot = replaceAllString(ouputRoot, "\"\"", "[\"")&#xd;
&#xd;
            if (ouputRoot.indexOf("[") != 0) {&#xd;
                ouputRoot = "[" + ouputRoot + "]"&#xd;
            }&#xd;
        }&#xd;
        //If data null before edit&#xd;
        ouputRoot= replaceAllString(ouputRoot, ":[\",", ":\"\",")&#xd;
        ouputRoot= replaceAllString(ouputRoot, ":\"]\"", ":\"\"]")&#xd;
        return ouputRoot&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * standardGroupKey:&#xd;
     *  - edit groupKey text to standard before send to servlet&#xd;
     *  - remove special char ({,},[,],")&#xd;
     *  - split follow "," => add character " in start and end of each element&#xd;
     *  - add "[" and "]" in start and end of final string&#xd;
     * @param groupKey: string data receive from input text "GROUPKEY"&#xd;
     * @return standard groupKey&#xd;
    */&#xd;
    function standardGroupKey(groupKey) {&#xd;
        groupKey = replaceAllString(groupKey, "{", "")&#xd;
        groupKey = replaceAllString(groupKey, "}", "")&#xd;
        groupKey = replaceAllString(groupKey, "[", "")&#xd;
        groupKey = replaceAllString(groupKey, "]", "")&#xd;
        groupKey = replaceAllString(groupKey, "\"", "")&#xd;
&#xd;
        var output&#xd;
        if (groupKey.indexOf(",") == -1) {&#xd;
            if (groupKey.indexOf("[\"") == -1) {&#xd;
                groupKey = "[\"" + groupKey&#xd;
            }&#xd;
            if (groupKey.indexOf("\"]") == -1) {&#xd;
                groupKey = groupKey + "\"]"&#xd;
            }&#xd;
            output = groupKey&#xd;
        } else {&#xd;
            output = "["&#xd;
            var lstKey = groupKey.split(",")&#xd;
            for (var i = 0; i &lt; lstKey.length; i++) {&#xd;
                output += "\"" + lstKey[i].trim() + "\","&#xd;
            }&#xd;
            output = output.substring(0, output.length - 1)&#xd;
            output += "]"&#xd;
        }&#xd;
        return output&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * standardDest:&#xd;
     *  - edit destText text to standard before send to servlet&#xd;
     *  - remove special char ([,])&#xd;
     *  - split follow "," => add "[, ]" in start and end each element&#xd;
     *  - add "[, ]" in start and end final string text&#xd;
     * @param destText: string data receive from input "DEST"&#xd;
     * @return standard destText&#xd;
    */&#xd;
    function standardDest(destText) {&#xd;
//        destText = standardRoot(destText)&#xd;
        destText = replaceAllString(destText, "[", "")&#xd;
        destText = replaceAllString(destText, "]", "")&#xd;
        var lstDest = destText.split(",")&#xd;
        var outputDest = ""&#xd;
        for (var i = 0; i &lt; lstDest.length; i++) {&#xd;
            if(""!=checkMapTypeValidation(lstDest[i])){&#xd;
                outputDest += "[" + lstDest[i] + "],"&#xd;
            }else{&#xd;
                return "";&#xd;
            }&#xd;
        }&#xd;
        outputDest = "[" + outputDest.substring(0, outputDest.length - 1) + "]"&#xd;
        return outputDest&#xd;
    }&#xd;
&#xd;
&#xd;
    /**&#xd;
     * standardClosure: edit string closure to standard closure&#xd;
     * @param strClosure: data receive from "FETCHACTION", "ACCUMULATE", "FINALLY"&#xd;
     * @return standard strClosure&#xd;
    */&#xd;
    function standardClosure(strClosure) {&#xd;
        if (strClosure.indexOf("{") != 0) {&#xd;
            strClosure = "{\n" + strClosure&#xd;
        }&#xd;
        strClosure = strClosure.trim()&#xd;
        if (strClosure.charAt(strClosure.length - 1) != "}") {&#xd;
            strClosure = strClosure + "\n}"&#xd;
        }&#xd;
        return strClosure&#xd;
    }&#xd;
&#xd;
    /**&#xd;
     * showErrorMsg: console log error when send and receive data&#xd;
    */&#xd;
    function showErrorMsg(xhr, status, error) {&#xd;
        console.log(xhr)&#xd;
        console.log(status)&#xd;
        console.log(error)&#xd;
    }&#xd;
&#xd;
    jQuery.noConflict()&#xd;
});</code>
    </property>
    <property>
      <name>JobConfiguration-js</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>243cce5c-9aa7-4f09-acd3-75e16e51a616</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>/**&#xd;
 * resetControl: reset to init screen&#xd;
 *  - delete table: chartTable, paramJobTable, updateJobInstanceTable, paramInstanceTable&#xd;
 *  - disable control: listChartType, nameChartText, groupChartText, nameJobText, instanceNameText, nameInstanceText&#xd;
 *  - reset selectors to be empty: messageChart, messageParams, messageInstances, messageInstancesParams, messageListInstances, messageValid, message_add&#xd;
 *  - reset temporary maps data: groupChart, charts, jobParams, chart, jobInstance, jobInstanceValue, paramInstance&#xd;
 *  - reset form action of job&#xd;
*/&#xd;
function resetControl(type) {&#xd;
	require(['jquery'], function($) {&#xd;
&#xd;
		// Reset form&#xd;
		$("#form1")[0].reset();&#xd;
&#xd;
		// Reset table data&#xd;
		$("#chartTable").find("tr:gt(1)").remove();&#xd;
		$("#paramJobTable").find("tr:gt(0)").remove();&#xd;
		$("#updateJobInstanceTable").find("tr:gt(0)").remove();&#xd;
		$("#chartTable").append('&lt;tr id="inputChart">&lt;td>&lt;input type="text" id="groupChartText" tabindex="21" placeholder="TestGroup"/>&lt;div id="messageChartGroup">&lt;/div>&lt;/td>&lt;td>&lt;select id="listChartType" tabindex="22">&lt;option id="none" value="pie">pie&lt;/option>&lt;option id="none" value="line">line&lt;/option>&lt;option id="none" value="bar">bar&lt;/option>&lt;option id="none" value="area">area&lt;/option>&lt;/select>&lt;div id="messageChartType">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="nameChartText" tabindex="23" placeholder="Logbuffer waits count"/>&lt;div id="messageChartName">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="text" id="chartColumnsText" tabindex="24" placeholder="WaitsCnt"/>&lt;div id="messageChartColumn">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="hintColumnsText" tabindex="25" placeholder="WritesCnt, OsLogWrittenCnt, WaitsPct"/>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateChartInfo" tabindex="26"/>&lt;/td>&lt;/tr>');&#xd;
		$("#paramJobTable").append('&lt;tr id="inputParams">&lt;td>&lt;input type="text" id="nameJobText" tabindex="28" placeholder="ParamsName"/>&lt;div id="messageParamsName">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" style="width:100%;" id="valueJobText" tabindex="29 placeholder="Value""/>&lt;div id="messageParamsValue">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateParamOfJob" tabindex="30"/>&lt;/td>&lt;/tr>');&#xd;
		$("#updateJobInstanceTable").append('&lt;tr id="inputInstance">&lt;td>&lt;input type="text" id="instanceNameText" tabindex="32" placeholder="instanceName"/>&lt;div id="messageInstanceName">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="hostIdText" tabindex="33" placeholder="localhost"/>&lt;/td>&lt;td>&lt;input type="text" id="sidText" tabindex="34" placeholder="sid"/>&lt;/td>&lt;td>&lt;input type="text" id="scheduleText" tabindex="35" placeholder="300i"/>&lt;div id="messageInstanceSchedule">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateInstance" tabindex="36"/>&lt;/td>&lt;/tr>');&#xd;
		$('#listChartType').prop('disabled', false);&#xd;
		$('#nameChartText').prop('disabled', false);&#xd;
		$('#groupChartText').prop('disabled', false);&#xd;
		$('#nameJobText').prop('disabled', false);&#xd;
		$('#instanceNameText').prop('disabled', false);&#xd;
		$('#nameInstanceText').prop('disabled', false);&#xd;
		        &#xd;
		// Reset message&#xd;
		$("#messageValid").html("")&#xd;
		$("#messageDbtypeCbb").html("")&#xd;
		$("#messageJobnameText").html("")&#xd;
		$("#messageListActionJob").html("")&#xd;
		$("#messageQueryText").html("")&#xd;
		$("#messageDbexecText").html("")&#xd;
		$("#messageCommandText").html("")&#xd;
		$("#messageFormatText").html("")&#xd;
		$("#messageFetchactionText").html("")&#xd;
		$("#messageOsinfoText").html("")&#xd;
		$("#messageKeyexprRoot").html("")&#xd;
		$("#messageKeyexprUnit").html("")&#xd;
		$("#messageChartGroup").html("")&#xd;
		$("#messageChart").html("")&#xd;
		$("#messageChartType").html("")&#xd;
		$("#messageChartName").html("")&#xd;
		$("#messageChartColumn").html("")&#xd;
		$("#messageParams").html('')&#xd;
		$("#messageParamsName").html("")&#xd;
		$("#messageParamsValue").html("")&#xd;
		$('#messageInstances').html("");&#xd;
		$("#messageInstanceName").html("")&#xd;
		$("#messageInstanceSchedule").html("")&#xd;
		&#xd;
		// Reset testRun&#xd;
		$("#testResult").html("")&#xd;
		$("#console").val("")&#xd;
&#xd;
		// Reset temporary maps data        &#xd;
		groupChart = null&#xd;
		charts = {}&#xd;
		jobParams = {}&#xd;
		chart = {}&#xd;
		jobInstance = {}&#xd;
		jobInstanceValue = {}&#xd;
		paramInstance = {}&#xd;
&#xd;
		// Reset Action of Job&#xd;
		showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
&#xd;
		if("MONITORINGTYPE"==type || "DBTYPE"==type){&#xd;
			$("#listJob").html("&lt;option id='noChoice' value='noChoice'>-select a job-&lt;/option>")			&#xd;
		}&#xd;
		&#xd;
		if("@OS"==$("#listMonitoring").val()){&#xd;
			$(".osInfoForm").show();&#xd;
		}&#xd;
	});&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * showHideActionForm: show or hide actions in list action of job&#xd;
 * @param mapControlState: map data action, key is selector, value is 1 (show selector) or 0 (hide selector)&#xd;
**/&#xd;
function showHideActionForm(mapControlState) {&#xd;
    require(['jquery'], function($) {&#xd;
        for(var key in mapControlState) {&#xd;
            if(mapControlState[key] == 1) {&#xd;
                $(key).show();&#xd;
            } else {&#xd;
                $(key).hide();&#xd;
            }&#xd;
        }&#xd;
    });&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * standardParams:&#xd;
 *  - edit paramsText text to standard before send to servlet&#xd;
 * @param paramsText: string data receive from input "value" of JOB PARAMS form&#xd;
 * @return standard paramsText&#xd;
*/&#xd;
function standardParams(paramsText) {&#xd;
    paramsText = replaceAllString(paramsText, "\"", "")&#xd;
    paramsText = replaceAllString(paramsText, "'", "")&#xd;
&#xd;
    var ouputParams = ""&#xd;
    var lstRoot = paramsText.split(",")&#xd;
    if ((lstRoot.length == 1) &amp;&amp; (paramsText.indexOf("{") == -1)&amp;&amp; (paramsText.indexOf("}") == -1)&amp;&amp; (paramsText.indexOf("[") == -1)&amp;&amp; (paramsText.indexOf("]") == -1)) {&#xd;
        ouputParams = "\"" + paramsText + "\""&#xd;
    } else {&#xd;
        paramsText = replaceAllString(paramsText, "{", "\"")&#xd;
        paramsText = replaceAllString(paramsText, "}", "\"\"")&#xd;
        paramsText = replaceAllString(paramsText, "[", "\"")&#xd;
        paramsText = replaceAllString(paramsText, "]", "\"\"")&#xd;
&#xd;
        if (paramsText.indexOf(":") == -1) {&#xd;
            ouputParams = standardGroupKey(paramsText)&#xd;
        } else {&#xd;
            lstRoot = paramsText.split(",")&#xd;
            for (var i = 0; i &lt; lstRoot.length; i++) {&#xd;
                var lstColon = lstRoot[i].split(":")&#xd;
                for (var j = 0; j &lt; lstColon.length; j++) {&#xd;
                    ouputParams += "\"" + lstColon[j].trim() + "\"" + ":"&#xd;
                }&#xd;
                ouputParams = ouputParams.substring(0, ouputParams.length - 1)&#xd;
                ouputParams += ","&#xd;
            }&#xd;
            ouputParams = ouputParams.substring(0, ouputParams.length - 1)&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"\"\"\"", "\"]]")&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"\"", "\"]")&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"", "[\"")&#xd;
&#xd;
            if (ouputParams.indexOf("[") != 0) {&#xd;
                ouputParams = "[" + ouputParams + "]"&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
    //If data null before edit&#xd;
    ouputParams = replaceAllString(ouputParams, ":[\",", ":\"\",")&#xd;
    ouputParams = replaceAllString(ouputParams, ":\"]\"", ":\"\"]")&#xd;
    ouputParams = replaceAllString(ouputParams, ":\"]]\"", ":\"\"]]")&#xd;
&#xd;
    return ouputParams&#xd;
}&#xd;
&#xd;
/**&#xd;
 * replaceAllString: replace all character to an other character&#xd;
 * @param oriStr: original string&#xd;
 * @param strTarget: original character&#xd;
 * @param strSubString: change character&#xd;
 * @return standard oriStr&#xd;
*/&#xd;
function replaceAllString(oriStr, strTarget, strSubString) {&#xd;
    var strText = oriStr;&#xd;
    var intIndexOfMatch = strText.indexOf(strTarget);&#xd;
    while (intIndexOfMatch != -1) {&#xd;
        strText = strText.replace(strTarget, strSubString)&#xd;
        intIndexOfMatch = strText.indexOf(strTarget);&#xd;
    }&#xd;
    return (strText);&#xd;
}</code>
    </property>
    <property>
      <name>resetControl</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>3</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>61c643df-8040-41fa-9727-05f7681a8144</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>/**&#xd;
 * bindingData: binding data into elements&#xd;
 * @params result: data response from servlet&#xd;
*/&#xd;
function bindingData(result) {&#xd;
	require(['jquery'], function($) {&#xd;
		// JOB NAME, JOB FILE NAME, JOB CLASS NAME, COMMENT AND GROUP KEY&#xd;
		$("#jobNameText").val(result.Job.JOB)&#xd;
		$("#jobFileNameText").val(selectedJob)&#xd;
		$("#jobClassNameText").val(result.Job.jobclass)&#xd;
		if (result.Job.comment != null) {&#xd;
		    $("#commentForJobText").css('min-height', '200px')&#xd;
		    $("#commentForJobText").val(result.Job.comment)&#xd;
		}&#xd;
		$("#groupkeyText").val(result.Job.GROUPKEY)&#xd;
&#xd;
		// ACTION OF JOB: QUERY, DBEXEC, COMMAND, FETCHACTION&#xd;
		if (result.Job.QUERY != null) {&#xd;
		    $("#listActionJob").val("runQuery")&#xd;
		    showHideActionForm({"#showHideQueryForm": 1, "#showHideQueryVariablesForm": 1, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
		    $("#queryText").val(result.Job.QUERY)&#xd;
		    $("#queryVariableText").val(result.Job.QUERY_VARIABLE)&#xd;
		} else if (result.Job.DBEXEC != null) {&#xd;
		    $("#listActionJob").val("runOther")&#xd;
		    showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 1, "#showHideDbexecVariablesForm": 1, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 0})&#xd;
		    $("#dbexecText").val(result.Job.DBEXEC)&#xd;
		    $("#dbexecVariableText").val(result.Job.DBEXEC_VARIABLE)&#xd;
		} else if (result.Job.COMMAND != null) {&#xd;
		    $("#listActionJob").val("runCommand")&#xd;
		    showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 1, "#showHideFormatForm": 1, "#showHideFetchactionForm": 0})&#xd;
		    $("#dbexecText").val(result.Job.DBEXEC)&#xd;
		    $("#commandText").val(result.Job.COMMAND)&#xd;
		    $("#formatText").val(result.Job.FORMAT)&#xd;
		} else if (result.Job.FETCHACTION != null) {&#xd;
		    $("#fetchactionText").css('height', '250px')&#xd;
		    $("#listActionJob").val("runFetchAction")&#xd;
		    showHideActionForm({"#showHideQueryForm": 0, "#showHideQueryVariablesForm": 0, "#showHideDbexecForm": 0, "#showHideDbexecVariablesForm": 0, "#showHideCommandForm": 0, "#showHideFormatForm": 0, "#showHideFetchactionForm": 1})&#xd;
		    $("#fetchactionText").val(result.Job.FETCHACTION)&#xd;
		}&#xd;
&#xd;
		// ACCUMULATE, FINALLY&#xd;
		if (result.Job.ACCUMULATE != null) {&#xd;
		    $("#accumulateText").css('height', '250px')&#xd;
		}&#xd;
		$("#accumulateText").val(result.Job.ACCUMULATE)&#xd;
		$("#finallyText").val(result.Job.FINALLY)&#xd;
&#xd;
		// SENDTYPE, RESOURCE, DEST&#xd;
		var valSendType&#xd;
		if (result.Job.SENDTYPE != null) {&#xd;
		    valSendType = result.Job.SENDTYPE.replace("\"", "").replace("\n", "").replace("\"", "").replace(/^\s+|\s+$/g, '')&#xd;
		}&#xd;
		$("#listSendType").val(valSendType)&#xd;
&#xd;
		var resource&#xd;
		if (result.Job.RESOURCEID != null) {&#xd;
		    resource = result.Job.RESOURCEID.replace("\"", "").replace("\n", "").replace("\"", "").replace(/^\s+|\s+$/g, '')&#xd;
		}&#xd;
		$("#resourceIdText").val(resource)&#xd;
		$("#osInfoText").val(result.Job.OSINFO)&#xd;
		$("#destText").val(result.Job.DEST)&#xd;
&#xd;
		// KEYEXPR&#xd;
		// ---- Check if valSendType has no data&#xd;
		var htmlChartSource = "&lt;tr>&lt;th colspan='6'>KEYEXPR._chart&lt;/th>&lt;/tr>&lt;tr>&lt;th>&lt;p>Group&lt;/p>&lt;/th>&lt;th>&lt;p>Type&lt;/p>&lt;/th>&lt;th>&lt;p>Name&lt;/p>&lt;/th>&lt;th>&lt;p>Chart Columns&lt;/p>&lt;/th>&lt;th>&lt;p>Hint_columns&lt;/p>&lt;/th>&lt;th>&lt;p>Action&lt;/p>&lt;/th>&lt;/tr>"&#xd;
		if ((valSendType == "") || (valSendType == null)) {&#xd;
		    valSendType = ""&#xd;
		    var keyExprChk = result.Job.KEYEXPR&#xd;
		    if (keyExprChk != null) {&#xd;
		        if (keyExprChk instanceof Array) {&#xd;
		            valSendType = "Store"&#xd;
		        } else {&#xd;
		            var mapSequenceChk = result.Job.KEYEXPR._sequence&#xd;
		            var mapUnitChk = result.Job.KEYEXPR._unit&#xd;
		            var mapChartChk = result.Job.KEYEXPR._chart&#xd;
		            if (((mapSequenceChk != null) &amp;&amp; (! mapSequenceChk instanceof Array))||&#xd;
		                ((mapUnitChk != null) &amp;&amp; (! mapUnitChk instanceof Array))||&#xd;
		                ((mapChartChk != null) &amp;&amp; (! mapChartChk instanceof Array))){&#xd;
		               valSendType = "Subtyped"&#xd;
		            } else {&#xd;
		                for (var key in mapKeyexpr) {&#xd;
		                    if ((key != "_sequence") &amp;&amp;  (key != "_unit") &amp;&amp; (key != "_description") &amp;&amp; (key != "_chart")){&#xd;
		                        valSendType = "Subtyped"&#xd;
		                    }&#xd;
		                }&#xd;
		                if (valSendType == ""){&#xd;
		                    valSendType = "Store"&#xd;
		                }       &#xd;
		            }&#xd;
		        }&#xd;
		    }&#xd;
		}&#xd;
		// ---- DATA IS STORE&#xd;
		if (valSendType == "Store") {&#xd;
		    // Root&#xd;
		    var keyExpr = result.Job.KEYEXPR&#xd;
		    var rootStr = ""&#xd;
&#xd;
		    if (keyExpr != null) {&#xd;
		        if (!(keyExpr instanceof Array)) {&#xd;
		            keyExpr = keyExpr._root&#xd;
		        }&#xd;
		        if (keyExpr != null) {&#xd;
		            for (var i = 0; i &lt; keyExpr.length; i++) {&#xd;
		                rootStr += keyExpr[i] + ","&#xd;
		            }&#xd;
		        }&#xd;
		        if (rootStr != "") {&#xd;
		            rootStr = rootStr.substring(0, rootStr.length - 1)&#xd;
		        }&#xd;
		        $("#rootText").val(rootStr)&#xd;
&#xd;
		        // Sequence&#xd;
		        $("#sequenceText").val(result.Job.KEYEXPR._sequence)&#xd;
&#xd;
		        // Chart&#xd;
		        var lstChart = result.Job["KEYEXPR._chart"]&#xd;
		        if (lstChart != null) {&#xd;
		            for (var i = 0; i &lt; lstChart.length; i++) {&#xd;
		                // chart type&#xd;
		                var type = lstChart[i].type&#xd;
		                type = type.replace("\"", "").replace("\n", "").replace("\"", "").replace(/^\s+|\s+$/g, '')&#xd;
		                // chart name&#xd;
		                var name = lstChart[i].name&#xd;
		                // chart column&#xd;
		                var chartCol = ""&#xd;
		                if (lstChart[i].chart_columns != null) {&#xd;
		                    chartCol = lstChart[i].chart_columns&#xd;
		                }&#xd;
		                // hint column&#xd;
		                var hintCol = ""&#xd;
		                if (lstChart[i].hint_columns != null) {&#xd;
		                    hintCol = lstChart[i].hint_columns&#xd;
		                }&#xd;
		                // key of chart&#xd;
		                groupChart = ""&#xd;
		                var keyForChart = groupChart + "_" + type + "_" + name&#xd;
		                // map data chart&#xd;
		                var inputMaps = {}&#xd;
		                if (hintCol == "") {&#xd;
		                    inputMaps = {&#xd;
		                        'group': groupChart,&#xd;
		                        'type': type,&#xd;
		                        'name': name,&#xd;
		                        'chart_columns': chartCol&#xd;
		                    }&#xd;
		                } else {&#xd;
		                    inputMaps = {&#xd;
		                        'group': groupChart,&#xd;
		                        'type': type,&#xd;
		                        'name': name,&#xd;
		                        'chart_columns': chartCol,&#xd;
		                        'hint_columns': hintCol&#xd;
		                    }&#xd;
		                }&#xd;
		                // set value for map "charts"&#xd;
		                charts[keyForChart] = inputMaps&#xd;
		                // generate html source to draw chart table&#xd;
		                htmlChartSource += "&lt;tr>&lt;td>&lt;p>&lt;/p>&lt;/td>&lt;td>&lt;p>" + type + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + name + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + chartCol + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + hintCol + "&lt;/p>&lt;/td>&lt;td class='td_button'>&lt;input type='button' style = 'width:50px' class ='delete_btn button' value ='Delete'/>&lt;input type='button'  style = 'width:50px'  class ='edit_btn button' value ='Edit'/>&lt;/td>&lt;/tr>"&#xd;
		            }&#xd;
		        }&#xd;
		    }&#xd;
&#xd;
    		htmlChartSource += '&lt;tr id="inputChart">&lt;td>&lt;input type="text" id="groupChartText" tabindex="21" disabled placeholder="TestGroup"/>&lt;div id="messageChartGroup">&lt;/div>&lt;/td>&lt;td>&lt;select id="listChartType" tabindex="22">&lt;option id="none" value="pie">pie&lt;/option>&lt;option id="none" value="line">line&lt;/option>&lt;option id="none" value="bar">bar&lt;/option>&lt;option id="none" value="area">area&lt;/option>&lt;/select>&lt;div id="messageChartType">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="nameChartText" tabindex="23" placeholder="Logbuffer waits count"/>&lt;div id="messageChartName">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="text" id="chartColumnsText" tabindex="24" placeholder="WaitsCnt"/>&lt;div id="messageChartColumn">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="hintColumnsText" tabindex="25" placeholder="WritesCnt, OsLogWrittenCnt, WaitsPct"/>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateChartInfo" tabindex="26"/>&lt;/td>&lt;/tr>';&#xd;
		} else if (valSendType == "Subtyped") {&#xd;
		// ---- DATA IS SUBTYPED&#xd;
		    // Sequence&#xd;
		    var mapSequence = result.Job.KEYEXPR._sequence&#xd;
		    var resultSeq = ""&#xd;
		    if (mapSequence instanceof Array) {&#xd;
		        for (var i = 0; i &lt; mapSequence.length; i++) {&#xd;
		            resultSeq += mapSequence[i] + ","&#xd;
		        }&#xd;
		        resultSeq = resultSeq.substring(0, resultSeq.length - 1)&#xd;
		    } else {&#xd;
		        for (var key in mapSequence) {&#xd;
		            if (resultSeq != "") {&#xd;
		                resultSeq += ",\n"&#xd;
		            }&#xd;
		            resultSeq += key + ": [" + mapSequence[key] + "]"&#xd;
		        }&#xd;
		    }&#xd;
		    $("#sequenceText").val(resultSeq)&#xd;
&#xd;
		    // Chart&#xd;
		    var mapChart = result.Job["KEYEXPR._chart"]&#xd;
		    for (var key in mapChart) {&#xd;
		        var lstChart = mapChart[key]&#xd;
		        for (var i = 0; i &lt; lstChart.length; i++) {&#xd;
		            // chart type&#xd;
		            var type = lstChart[i].type&#xd;
		            // chart name&#xd;
		            var name = lstChart[i].name&#xd;
		            // chart column&#xd;
		            var chartCol = ""&#xd;
		            if (lstChart[i].chart_columns != null) {&#xd;
		                chartCol = lstChart[i].chart_columns&#xd;
		            }&#xd;
		            // hint column&#xd;
		            var hintCol = ""&#xd;
		            if (lstChart[i].hint_columns != null) {&#xd;
		                hintCol = lstChart[i].hint_columns&#xd;
		            }&#xd;
		            // generate html source to draw chart table&#xd;
		            htmlChartSource += "&lt;tr>&lt;td>&lt;p>" + key + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + type + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + name + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + chartCol + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + hintCol + "&lt;/p>&lt;/td>&lt;td class='td_button'>&lt;input type='button' style = 'width:50px' class ='delete_btn button' value ='Delete'/>&lt;input type='button'  style = 'width:50px'  class ='edit_btn button' value ='Edit'/>&lt;/td>&lt;/tr>"&#xd;
		            // key of chart&#xd;
		            groupChart = key&#xd;
		            var keyForChart = groupChart + "_" + type + "_" + name&#xd;
		            // map data chart&#xd;
		            if (hintCol == "") {&#xd;
		                inputMaps = {&#xd;
		                    'group': groupChart,&#xd;
		                    'type': type,&#xd;
		                    'name': name,&#xd;
		                    'chart_columns': chartCol&#xd;
		                }&#xd;
		            } else {&#xd;
		                inputMaps = {&#xd;
		                    'group': groupChart,&#xd;
		                    'type': type,&#xd;
		                    'name': name,&#xd;
		                    'chart_columns': chartCol,&#xd;
		                    'hint_columns': hintCol&#xd;
		                }&#xd;
		            }&#xd;
		            // set value for map "charts"&#xd;
		            charts[keyForChart] = inputMaps&#xd;
		        }&#xd;
		    }&#xd;
			htmlChartSource += '&lt;tr id="inputChart">&lt;td>&lt;input type="text" id="groupChartText" tabindex="21" placeholder="TestGroup"/>&lt;div id="messageChartGroup">&lt;/div>&lt;/td>&lt;td>&lt;select id="listChartType" tabindex="22">&lt;option id="none" value="pie">pie&lt;/option>&lt;option id="none" value="line">line&lt;/option>&lt;option id="none" value="bar">bar&lt;/option>&lt;option id="none" value="area">area&lt;/option>&lt;/select>&lt;div id="messageChartType">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="nameChartText" tabindex="23" placeholder="Logbuffer waits count"/>&lt;div id="messageChartName">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="text" id="chartColumnsText" tabindex="24" placeholder="WaitsCnt"/>&lt;div id="messageChartColumn">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="hintColumnsText" tabindex="25" placeholder="WritesCnt, OsLogWrittenCnt, WaitsPct"/>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateChartInfo" tabindex="26"/>&lt;/td>&lt;/tr>';&#xd;
&#xd;
		}&#xd;
		&#xd;
		// draw table "Chart Info"&#xd;
		$("#chartTable").html(htmlChartSource)&#xd;
&#xd;
		// Unit&#xd;
		if (result.Job["KEYEXPR._unit"] != null) {&#xd;
		    $("#unitText").css('min-height', '100px')&#xd;
		}&#xd;
		var mapUnit = result.Job["KEYEXPR._unit"]&#xd;
		if (mapUnit != null) {&#xd;
		    $("#unitText").val(JSON.stringify(mapUnit))&#xd;
		}&#xd;
&#xd;
		if (valSendType == "Subtyped") {&#xd;
		    // Root&#xd;
		    var mapKeyexpr = result.Job.KEYEXPR&#xd;
		    var resultRoot = ""&#xd;
		    for (var key in mapKeyexpr) {&#xd;
		        if (key == "_sequence" || key == "_unit" || key == "_chart") {&#xd;
		            delete mapKeyexpr[key]&#xd;
		        }&#xd;
		    }&#xd;
		    for (var key in mapKeyexpr) {&#xd;
		        resultRoot += key + ": [" + mapKeyexpr[key] + "],"&#xd;
		    }&#xd;
		    resultRoot = resultRoot.substring(0, resultRoot.length - 1)&#xd;
		    if (resultRoot != null &amp;&amp; resultRoot != "") {&#xd;
		        resultRoot = "[" + resultRoot + "]"&#xd;
		    }&#xd;
		    $("#rootText").val(resultRoot)&#xd;
		}&#xd;
		// PARAMS&#xd;
		var htmlParamsSource = "&lt;tr>&lt;th>&lt;p>name&lt;/p>&lt;/th>&lt;th>&lt;p>value&lt;/p>&lt;/th>&lt;th>&lt;p>Action&lt;/p>&lt;/th>&lt;/tr>"&#xd;
		var mapParams = result.params&#xd;
		if (mapParams != null) {&#xd;
		    var lstKeyParams = Object.keys(mapParams)&#xd;
		    for (var i = 0; i &lt; lstKeyParams.length; i++) {&#xd;
		        jobParams[lstKeyParams[i]] = standardParams(mapParams[lstKeyParams[i]])&#xd;
		        htmlParamsSource += "&lt;tr>&lt;td>&lt;p>" + lstKeyParams[i] + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + mapParams[lstKeyParams[i]] + "&lt;/p>&lt;/td>&lt;td class='td_button'>&lt;input type='button' style = 'width:50px' class ='delete_btn button' value ='Delete'/>&lt;input type='button'  style = 'width:50px'  class ='edit_btn button' value ='Edit'/>&lt;/td>&lt;/tr>"&#xd;
		    }&#xd;
		}&#xd;
		htmlParamsSource += '&lt;tr id="inputParams">&lt;td>&lt;input type="text" id="nameJobText" tabindex="28" placeholder="ParamsName"/>&lt;div id="messageParamsName">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" style="width:100%;" id="valueJobText" tabindex="29" placeholder="Value"/>&lt;div id="messageParamsValue">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateParamOfJob" tabindex="30"/>&lt;/td>&lt;/tr>';&#xd;
		$("#paramJobTable").html(htmlParamsSource)&#xd;
&#xd;
		// INSTANCES&#xd;
		var htmlInstancesSource = "&lt;tr>&lt;th>&lt;p>Instance's name&lt;/p>&lt;/th>&lt;th>&lt;p>Host ID&lt;/p>&lt;/th>&lt;th>&lt;p>SID&lt;/p>&lt;/th>&lt;th>&lt;p>Schedule&lt;/p>&lt;/th>&lt;th>&lt;p>Action&lt;/p>&lt;/th>&lt;/tr>"&#xd;
		var mapInstances = result.instances&#xd;
		if (mapInstances != null) {&#xd;
		    var lstKeyInst = Object.keys(mapInstances)&#xd;
		    for (var i = 0; i &lt; lstKeyInst.length; i++) {&#xd;
		        var instName = lstKeyInst[i]&#xd;
		        var params = ""&#xd;
		        var sid = ""&#xd;
		        var hostId = ""&#xd;
		        if (mapInstances[lstKeyInst[i]]['params'] != null) {&#xd;
		            params = JSON.stringify(mapInstances[lstKeyInst[i]]['params'])&#xd;
		            jobInstanceValue['params'] = standardParams(params)&#xd;
		            &#xd;
		            var paramsList = replaceAllString(replaceAllString(replaceAllString(params, "\"", ""), "}", ""), "{", "").split(",");&#xd;
		            for(var j=0;j&lt;paramsList.length; j++){&#xd;
		            	var param = paramsList[j].split(":");&#xd;
		            	if("dbHostId"==param[0]){&#xd;
		            		hostId = param[1];&#xd;
		            	}else if("dbSid"==param[0]){&#xd;
		            		sid = param[1];&#xd;
		            	}&#xd;
		            }&#xd;
		        }&#xd;
		        &#xd;
		        var schedule = ""&#xd;
		        if (mapInstances[lstKeyInst[i]]['schedule'] != null) {&#xd;
		            schedule = mapInstances[lstKeyInst[i]]['schedule']&#xd;
		            jobInstanceValue['schedule'] = schedule&#xd;
&#xd;
		        }&#xd;
		        jobInstance[instName] = jobInstanceValue&#xd;
		        jobInstanceValue = {}&#xd;
		        htmlInstancesSource += "&lt;tr>&lt;td>&lt;p>" + instName + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + hostId + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + sid + "&lt;/p>&lt;/td>&lt;td>&lt;p>" + schedule + "&lt;/p>&lt;/td>&lt;td class='td_button'>&lt;input type='button' style = 'width:50px' class ='delete_btn button' value ='Delete'/>&lt;input type='button'  style = 'width:50px'  class ='edit_btn button' value ='Edit'/>&lt;/td>&lt;/tr>"&#xd;
		    }&#xd;
		}&#xd;
		htmlInstancesSource += '&lt;tr id="inputInstance">&lt;td>&lt;input type="text" id="instanceNameText" tabindex="32" placeholder="instanceName"/>&lt;div id="messageInstanceName">&lt;/div>&lt;/td>&lt;td>&lt;input type="text" id="hostIdText" tabindex="33" placeholder="localhost"/>&lt;/td>&lt;td>&lt;input type="text" id="sidText" tabindex="34" placeholder="sid"/>&lt;/td>&lt;td>&lt;input type="text" id="scheduleText" tabindex="35" placeholder="300i"/>&lt;div id="messageInstanceSchedule">&lt;/div>&lt;/td>&lt;td class="td_button">&lt;input type="button" value="Add" class="add_btn button" id="updateInstance" tabindex="36"/>&lt;/td>&lt;/tr>' ;&#xd;
		$("#updateJobInstanceTable").html(htmlInstancesSource)&#xd;
	});&#xd;
}&#xd;
</code>
    </property>
    <property>
      <name>bindingData</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>e16d36ec-74ee-4a1f-a095-a4c6c81bd028</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>table{&#xd;
 width: 100%;&#xd;
}&#xd;
th{&#xd;
 width: 20%;&#xd;
}&#xd;
td {&#xd;
text-align: left;&#xd;
vertical-align: top;&#xd;
}&#xd;
&#xd;
#nav{&#xd;
  float:left;&#xd;
  width:30%;&#xd;
}&#xd;
&#xd;
.main ul{&#xd;
  margin-left:0em;&#xd;
}&#xd;
.jobInfo{&#xd;
  width:150px;&#xd;
  height:200px;&#xd;
}&#xd;
&#xd;
#formJobInfo{&#xd;
  width:80%;&#xd;
}&#xd;
#xwikicontent textarea {&#xd;
  width:100%;&#xd;
  height:100%;&#xd;
  rows:10;&#xd;
  border:10px;&#xd;
  background: #FFFFD6!important&#xd;
}&#xd;
#xwikicontent input[type='text']{&#xd;
  background: #FFFFD6!important&#xd;
}&#xd;
&#xd;
#formJobParams{&#xd;
  width:80%;&#xd;
}&#xd;
&#xd;
#formInstances{&#xd;
  width:75%;&#xd;
  margin-left:50px;&#xd;
}&#xd;
&#xd;
.longContent{&#xd;
  max-width:210px&#xd;
}&#xd;
&#xd;
&#xd;
.delete_btn{&#xd;
  margin:5px !important;&#xd;
}&#xd;
&#xd;
.delete_btn{&#xd;
  width:50px;&#xd;
}&#xd;
.edit_btn{&#xd;
  width:50px;&#xd;
}&#xd;
.add_btn{&#xd;
  width:50px;&#xd;
}&#xd;
&#xd;
.td_button{&#xd;
  width:120px;&#xd;
  text-align:center;&#xd;
}&#xd;
&#xd;
&#xd;
#instanceInfoTable table{&#xd;
  margin:0px !important&#xd;
}&#xd;
#updateJobInstanceForm{&#xd;
  width:40%;&#xd;
  margin-left:200px;&#xd;
}&#xd;
&#xd;
#updateJobInstanceTable{&#xd;
  border:1px solid red !important;&#xd;
}&#xd;
&#xd;
#jobInstance{&#xd;
  width:700px;&#xd;
  overflow:auto;&#xd;
  max-height: 500px;&#xd;
}&#xd;
&#xd;
#buttonUpdateJobInfo{&#xd;
  text-align:center;&#xd;
  clear:both;&#xd;
  padding-top:15px; !important;&#xd;
}&#xd;
#chartInfoForm{&#xd;
  width:100%;&#xd;
  height:100%;&#xd;
  border:1px solid #E60000 !important;&#xd;
}&#xd;
&#xd;
#paramJobForm{&#xd;
  width:100%;&#xd;
  height:100%;&#xd;
  border:1px solid #E60000 !important;&#xd;
}&#xd;
&#xd;
#paramInstanceForm{&#xd;
  width:100%;&#xd;
  height:100%;&#xd;
  border:1px solid #E60000 !important;&#xd;
&#xd;
}&#xd;
#showHideQueryForm{&#xd;
  width:500px;&#xd;
}&#xd;
&#xd;
.classAction{&#xd;
 min-width:100%;&#xd;
}&#xd;
.message{&#xd;
color: green&#xd;
}&#xd;
.error{&#xd;
color: red&#xd;
}&#xd;
&#xd;
#chartInfo{&#xd;
height:300px; &#xd;
width:700px;&#xd;
overflow: auto;&#xd;
}&#xd;
&#xd;
#paramJob{&#xd;
height:300px; &#xd;
width:700px;&#xd;
overflow: auto;&#xd;
}&#xd;
&#xd;
#messageValid p {&#xd;
    font-size: 1.3em;&#xd;
    color: red;&#xd;
}&#xd;
&#xd;
#messageValid b {&#xd;
    font-size: 1.3em;&#xd;
    color: blue;&#xd;
}&#xd;
&#xd;
#testResult p {&#xd;
    font-size: 1.3em;&#xd;
    color: red;&#xd;
}&#xd;
&#xd;
#testResult b {&#xd;
    font-size: 1.3em;&#xd;
    color: blue;&#xd;
}&#xd;
&#xd;
#toggleKEYEXPR,#toggleJobParams {&#xd;
 cursor: pointer;&#xd;
 text-decoration: none;&#xd;
 font-weight: bold;&#xd;
 font-size: 1em&#xd;
}&#xd;
.showHideLink a{&#xd;
 background-color: green;&#xd;
 color: #fff;&#xd;
 font-weight: bold&#xd;
}&#xd;
</code>
    </property>
    <property>
      <name>jobconfig-css</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>0306404b-8184-4669-9e65-70cdc8cf0f51</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users>xwiki:XWiki.Admin</users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>1</number>
    <className>XWiki.XWikiRights</className>
    <guid>01021579-4982-4942-8b82-cbedaf834f4c</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>2</number>
    <className>XWiki.XWikiRights</className>
    <guid>b736df4f-f73d-407d-ba31-1a8d21101e0b</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>3</number>
    <className>XWiki.XWikiRights</className>
    <guid>e3de5d1d-8fe4-4129-9eb3-814efbe4ae90</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>4</number>
    <className>XWiki.XWikiRights</className>
    <guid>8c4d5258-614e-429c-b5e6-cc8838884674</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>5</number>
    <className>XWiki.XWikiRights</className>
    <guid>7ce56844-055f-4e19-845e-697546ff9166</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>6</number>
    <className>XWiki.XWikiRights</className>
    <guid>fb0f0db6-419e-497b-8792-040a201e624c</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>7</number>
    <className>XWiki.XWikiRights</className>
    <guid>0b099f51-c9f0-4d3b-9b09-d613bf2e7e8a</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>8</number>
    <className>XWiki.XWikiRights</className>
    <guid>49cb2f46-7397-4459-a227-0f16de4b57fd</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>10</number>
    <className>XWiki.XWikiRights</className>
    <guid>2dacddf1-cd73-4884-83ab-52397ae62084</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.JobConfiguration</name>
    <number>11</number>
    <className>XWiki.XWikiRights</className>
    <guid>61551504-e2cc-4e42-8f92-592c7638be84</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
</xwikidoc>