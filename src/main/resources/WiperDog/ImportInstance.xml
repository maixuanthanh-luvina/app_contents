<?xml version='1.0' encoding='UTF-8'?>
<xwikidoc version="1.1">
  <web>WiperDog</web>
  <name>ImportInstance</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1411000901000</creationDate>
  <parent>WiperDog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1411019675000</date>
  <contentUpdateDate>1411018854000</contentUpdateDate>
  <version>1.1</version>
  <title>Import Instance Info</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{include document="WiperDog.checkService"/}}
{{include document="WiperDogLib.GetJobInfo"/}}
{{include document="WiperDogLib.CommonMessage"/}}

{{velocity}}
$xwiki.ssx.use('WiperDog.checkService')
$xwiki.jsx.use("WiperDogLib.GetJobInfo")
$xwiki.ssx.use("WiperDogLib.GetJobInfo")
$xwiki.jsx.use("WiperDogLib.CommonMessage")
$xwiki.ssx.use("WiperDogLib.CommonMessage")

{{html wiki="true" clean="false"}}

&lt;div id="dropdownlist">
 &lt;table>
  &lt;tr>
   &lt;th>Monitoring Type(*)&lt;/th>
   &lt;td>&lt;select id="listMonitoring" tabindex="1">&lt;/select>&lt;div id="messageMonitoringtype">&lt;/div>&lt;/td>
  &lt;/tr>
  &lt;tr>
   &lt;th>DB Type&lt;/th>
   &lt;td>&lt;select id="dbTypeCbb" tabindex="2">&lt;/select>&lt;br/>&lt;div id="hintMessage">choose if Monitoring Type is @DB&lt;/div>&lt;div id="messageDbtypeCbb">&lt;/div>&lt;/td>
  &lt;/tr>
  &lt;tr>
   &lt;th>Job File&lt;/th>
   &lt;td>&lt;select id="listJob" tabindex="3">&lt;option id="noChoice" value="noChoice">-select a job-&lt;/option>&lt;/select>&lt;br/>&lt;div id="hintMessage">choose if edit existed job&lt;/div>&lt;/td>
  &lt;/tr>
 &lt;/table>
&lt;/div>

&lt;div id="viewer" >
 &lt;input type="text" name="jobName" id="jobNameText" readonly style="display: none;"/>
 &lt;div id='formUpload'>
  &lt;form action="${doc.getURL('upload')}" enctype="mutipart/form-data" method="post">
  &lt;input type="file" name="filepath_11" id="my_upload" />
  &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
  &lt;div id="fileName" style = "display: none">&lt;/div>
  &lt;div id="my_upload_results" >
   #template('attachmentslist.vm')
  &lt;/div>
  &lt;textarea id='fileContent'> &lt;/textarea>
  &lt;div id="btnLoadFile">&lt;input type='button' id='loadFromFile' class = 'button' value="Add to List Instances"/>&lt;/div>
  &lt;/form>
 &lt;/div>
 &lt;div id='messageLoadFile'>&lt;/div>
&lt;/div>

&lt;div id="instancesTableViewer">
 &lt;table id = 'instancesTable'>
  &lt;tr>
   &lt;th>Instance Name&lt;/th>&lt;th>Schedule&lt;/th>&lt;th>Params&lt;/th>
  &lt;/tr>
 &lt;/table>
&lt;/div>

|&lt;input type='button' value="Save to instances file" id='saveToInstFile' class = 'button'/>|&lt;input type='button' value="Export to CSV file" id='exportToCSV' class = 'button'/>

&lt;br/>&lt;br/>

{{/html}}
{{/velocity}}
</content>
  <attachment>
    <filename>sample.csv</filename>
    <author>xwiki:XWiki.Admin</author>
    <date>1411000901000</date>
    <version>1.1</version>
    <comment/>
    <content>SU5TVF9OQU1FLFNDSEVEVUxFLEhPU1RfSUQsU0lELFBBUkFNMSxQQVJBTTIsUEFSQU0zDQppbnN0XzEsMTBpLGhvc3RfaWQxLHNpZDEsdmFsX3BhcmFtMSx2YWxfcGFyYW0yLHZhbF9wYXJhbXMzDQppbnN0XzIsMjBpLGhvc3RfaWQyLHNpZDIsdmFsX3BhcmFtMjEsdmFsX3BhcmFtMjIsdmFsX3BhcmFtczIzDQppbnN0XzMsMzBpLGhvc3RfaWQzLHNpZDMsdmFsX3BhcmFtMzEsdmFsX3BhcmFtMzIsdmFsX3BhcmFtMzM=</content>
    <filesize>236</filesize>
  </attachment>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>15dc7d2c-dc16-4683-a93e-bd6ec72b49a8</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>require(['jquery'],function($){&#xd;
RegExp.escape = function(s) {&#xd;
	return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&amp;');&#xd;
};&#xd;
(function($) {&#xd;
	'use strict'&#xd;
	$.csv = {&#xd;
		defaults: {&#xd;
			separator: ',',&#xd;
			delimiter: '"',&#xd;
			headers: true&#xd;
		},&#xd;
		hooks: {&#xd;
			castToScalar: function(value, state) {&#xd;
				var hasDot = /\./;&#xd;
				if (isNaN(value)) {&#xd;
					return value;&#xd;
				} else {&#xd;
					if (hasDot.test(value)) {&#xd;
						return parseFloat(value);&#xd;
					} else {&#xd;
						var integer = parseInt(value);&#xd;
						if (isNaN(integer)) {&#xd;
							return null;&#xd;
						} else {&#xd;
							return integer;&#xd;
						}&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
		},&#xd;
		parsers: {&#xd;
			parse: function(csv, options) {&#xd;
				var separator = options.separator;&#xd;
				var delimiter = options.delimiter;&#xd;
				if (!options.state.rowNum) {&#xd;
					options.state.rowNum = 1;&#xd;
				}&#xd;
				if (!options.state.colNum) {&#xd;
					options.state.colNum = 1;&#xd;
				}&#xd;
				var data = [];&#xd;
				var entry = [];&#xd;
				var state = 0;&#xd;
				var value = ''&#xd;
				var exit = false;&#xd;
&#xd;
				function endOfEntry() {&#xd;
					state = 0;&#xd;
					value = '';&#xd;
					if (options.start &amp;&amp; options.state.rowNum &lt; options.start) {&#xd;
						entry = [];&#xd;
						options.state.rowNum++;&#xd;
						options.state.colNum = 1;&#xd;
						return;&#xd;
					}&#xd;
					if (options.onParseEntry === undefined) {&#xd;
						data.push(entry);&#xd;
					} else {&#xd;
						var hookVal = options.onParseEntry(entry, options.state);&#xd;
						if (hookVal !== false) {&#xd;
							data.push(hookVal);&#xd;
						}&#xd;
					}&#xd;
					entry = [];&#xd;
					if (options.end &amp;&amp; options.state.rowNum >= options.end) {&#xd;
						exit = true;&#xd;
					}&#xd;
					options.state.rowNum++;&#xd;
					options.state.colNum = 1;&#xd;
				}&#xd;
&#xd;
				function endOfValue() {&#xd;
					if (options.onParseValue === undefined) {&#xd;
						entry.push(value);&#xd;
					} else {&#xd;
						var hook = options.onParseValue(value, options.state);&#xd;
						if (hook !== false) {&#xd;
							entry.push(hook);&#xd;
						}&#xd;
					}&#xd;
					value = '';&#xd;
					state = 0;&#xd;
					options.state.colNum++;&#xd;
				}&#xd;
				var escSeparator = RegExp.escape(separator);&#xd;
				var escDelimiter = RegExp.escape(delimiter);&#xd;
				var match = /(D|S|\n|\r|[^DS\r\n]+)/;&#xd;
				var matchSrc = match.source;&#xd;
				matchSrc = matchSrc.replace(/S/g, escSeparator);&#xd;
				matchSrc = matchSrc.replace(/D/g, escDelimiter);&#xd;
				match = RegExp(matchSrc, 'gm');&#xd;
				csv.replace(match, function(m0) {&#xd;
					if (exit) {&#xd;
						return;&#xd;
					}&#xd;
					switch (state) {&#xd;
						case 0:&#xd;
							if (m0 === separator) {&#xd;
								value += '';&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfValue();&#xd;
								endOfEntry();&#xd;
								break;&#xd;
							}&#xd;
							if (/^\r$/.test(m0)) {&#xd;
								break;&#xd;
							}&#xd;
							value += m0;&#xd;
							state = 3;&#xd;
							break;&#xd;
						case 1:&#xd;
							if (m0 === delimiter) {&#xd;
								state = 2;&#xd;
								break;&#xd;
							}&#xd;
							value += m0;&#xd;
							state = 1;&#xd;
							break;&#xd;
						case 2:&#xd;
							if (m0 === delimiter) {&#xd;
								value += m0;&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === separator) {&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfValue();&#xd;
								endOfEntry();&#xd;
								break;&#xd;
							}&#xd;
							if (/^\r$/.test(m0)) {&#xd;
								break;&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
						case 3:&#xd;
							if (m0 === separator) {&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfValue();&#xd;
								endOfEntry();&#xd;
								break;&#xd;
							}&#xd;
							if (/^\r$/.test(m0)) {&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								throw new Error('CSVDataError: Illegal Quote [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal Data [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
						default:&#xd;
							throw new Error('CSVDataError: Unknown State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
					}&#xd;
				});&#xd;
				if (entry.length !== 0) {&#xd;
					endOfValue();&#xd;
					endOfEntry();&#xd;
				}&#xd;
				return data;&#xd;
			},&#xd;
			splitLines: function(csv, options) {&#xd;
				var separator = options.separator;&#xd;
				var delimiter = options.delimiter;&#xd;
				if (!options.state.rowNum) {&#xd;
					options.state.rowNum = 1;&#xd;
				}&#xd;
				var entries = [];&#xd;
				var state = 0;&#xd;
				var entry = '';&#xd;
				var exit = false;&#xd;
&#xd;
				function endOfLine() {&#xd;
					state = 0;&#xd;
					if (options.start &amp;&amp; options.state.rowNum &lt; options.start) {&#xd;
						entry = '';&#xd;
						options.state.rowNum++;&#xd;
						return;&#xd;
					}&#xd;
					if (options.onParseEntry === undefined) {&#xd;
						entries.push(entry);&#xd;
					} else {&#xd;
						var hookVal = options.onParseEntry(entry, options.state);&#xd;
						if (hookVal !== false) {&#xd;
							entries.push(hookVal);&#xd;
						}&#xd;
					}&#xd;
					entry = '';&#xd;
					if (options.end &amp;&amp; options.state.rowNum >= options.end) {&#xd;
						exit = true;&#xd;
					}&#xd;
					options.state.rowNum++;&#xd;
				}&#xd;
				var escSeparator = RegExp.escape(separator);&#xd;
				var escDelimiter = RegExp.escape(delimiter);&#xd;
				var match = /(D|S|\n|\r|[^DS\r\n]+)/;&#xd;
				var matchSrc = match.source;&#xd;
				matchSrc = matchSrc.replace(/S/g, escSeparator);&#xd;
				matchSrc = matchSrc.replace(/D/g, escDelimiter);&#xd;
				match = RegExp(matchSrc, 'gm');&#xd;
				csv.replace(match, function(m0) {&#xd;
					if (exit) {&#xd;
						return;&#xd;
					}&#xd;
					switch (state) {&#xd;
						case 0:&#xd;
							if (m0 === separator) {&#xd;
								entry += m0;&#xd;
								state = 0;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								entry += m0;&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfLine();&#xd;
								break;&#xd;
							}&#xd;
							if (/^\r$/.test(m0)) {&#xd;
								break;&#xd;
							}&#xd;
							entry += m0;&#xd;
							state = 3;&#xd;
							break;&#xd;
						case 1:&#xd;
							if (m0 === delimiter) {&#xd;
								entry += m0;&#xd;
								state = 2;&#xd;
								break;&#xd;
							}&#xd;
							entry += m0;&#xd;
							state = 1;&#xd;
							break;&#xd;
						case 2:&#xd;
							var prevChar = entry.substr(entry.length - 1);&#xd;
							if (m0 === delimiter &amp;&amp; prevChar === delimiter) {&#xd;
								entry += m0;&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === separator) {&#xd;
								entry += m0;&#xd;
								state = 0;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfLine();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\r') {&#xd;
								break;&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal state [Row:' + options.state.rowNum + ']');&#xd;
						case 3:&#xd;
							if (m0 === separator) {&#xd;
								entry += m0;&#xd;
								state = 0;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n') {&#xd;
								endOfLine();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\r') {&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								throw new Error('CSVDataError: Illegal quote [Row:' + options.state.rowNum + ']');&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal state [Row:' + options.state.rowNum + ']');&#xd;
						default:&#xd;
							throw new Error('CSVDataError: Unknown state [Row:' + options.state.rowNum + ']');&#xd;
					}&#xd;
				});&#xd;
				if (entry !== '') {&#xd;
					endOfLine();&#xd;
				}&#xd;
				return entries;&#xd;
			},&#xd;
			parseEntry: function(csv, options) {&#xd;
				var separator = options.separator;&#xd;
				var delimiter = options.delimiter;&#xd;
				if (!options.state.rowNum) {&#xd;
					options.state.rowNum = 1;&#xd;
				}&#xd;
				if (!options.state.colNum) {&#xd;
					options.state.colNum = 1;&#xd;
				}&#xd;
				var entry = [];&#xd;
				var state = 0;&#xd;
				var value = '';&#xd;
&#xd;
				function endOfValue() {&#xd;
					if (options.onParseValue === undefined) {&#xd;
						entry.push(value);&#xd;
					} else {&#xd;
						var hook = options.onParseValue(value, options.state);&#xd;
						if (hook !== false) {&#xd;
							entry.push(hook);&#xd;
						}&#xd;
					}&#xd;
					value = '';&#xd;
					state = 0;&#xd;
					options.state.colNum++;&#xd;
				}&#xd;
				if (!options.match) {&#xd;
					var escSeparator = RegExp.escape(separator);&#xd;
					var escDelimiter = RegExp.escape(delimiter);&#xd;
					var match = /(D|S|\n|\r|[^DS\r\n]+)/;&#xd;
					var matchSrc = match.source;&#xd;
					matchSrc = matchSrc.replace(/S/g, escSeparator);&#xd;
					matchSrc = matchSrc.replace(/D/g, escDelimiter);&#xd;
					options.match = RegExp(matchSrc, 'gm');&#xd;
				}&#xd;
				csv.replace(options.match, function(m0) {&#xd;
					switch (state) {&#xd;
						case 0:&#xd;
							if (m0 === separator) {&#xd;
								value += '';&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n' || m0 === '\r') {&#xd;
								break;&#xd;
							}&#xd;
							value += m0;&#xd;
							state = 3;&#xd;
							break;&#xd;
						case 1:&#xd;
							if (m0 === delimiter) {&#xd;
								state = 2;&#xd;
								break;&#xd;
							}&#xd;
							value += m0;&#xd;
							state = 1;&#xd;
							break;&#xd;
						case 2:&#xd;
							if (m0 === delimiter) {&#xd;
								value += m0;&#xd;
								state = 1;&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === separator) {&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n' || m0 === '\r') {&#xd;
								break;&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
						case 3:&#xd;
							if (m0 === separator) {&#xd;
								endOfValue();&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === '\n' || m0 === '\r') {&#xd;
								break;&#xd;
							}&#xd;
							if (m0 === delimiter) {&#xd;
								throw new Error('CSVDataError: Illegal Quote [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
							}&#xd;
							throw new Error('CSVDataError: Illegal Data [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
						default:&#xd;
							throw new Error('CSVDataError: Unknown State [Row:' + options.state.rowNum + '][Col:' + options.state.colNum + ']');&#xd;
					}&#xd;
				});&#xd;
				endOfValue();&#xd;
				return entry;&#xd;
			}&#xd;
		},&#xd;
		toArray: function(csv, options, callback) {&#xd;
			var options = (options !== undefined ? options : {});&#xd;
			var config = {};&#xd;
			config.callback = ((callback !== undefined &amp;&amp; typeof(callback) === 'function') ? callback : false);&#xd;
			config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator;&#xd;
			config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter;&#xd;
			var state = (options.state !== undefined ? options.state : {});&#xd;
			var options = {&#xd;
				delimiter: config.delimiter,&#xd;
				separator: config.separator,&#xd;
				onParseEntry: options.onParseEntry,&#xd;
				onParseValue: options.onParseValue,&#xd;
				state: state&#xd;
			}&#xd;
			var entry = $.csv.parsers.parseEntry(csv, options);&#xd;
			if (!config.callback) {&#xd;
				return entry;&#xd;
			} else {&#xd;
				config.callback('', entry);&#xd;
			}&#xd;
		},&#xd;
		toArrays: function(csv, options, callback) {&#xd;
			var options = (options !== undefined ? options : {});&#xd;
			var config = {};&#xd;
			config.callback = ((callback !== undefined &amp;&amp; typeof(callback) === 'function') ? callback : false);&#xd;
			config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator;&#xd;
			config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter;&#xd;
			var data = [];&#xd;
			var options = {&#xd;
				delimiter: config.delimiter,&#xd;
				separator: config.separator,&#xd;
				onParseEntry: options.onParseEntry,&#xd;
				onParseValue: options.onParseValue,&#xd;
				start: options.start,&#xd;
				end: options.end,&#xd;
				state: {&#xd;
					rowNum: 1,&#xd;
					colNum: 1&#xd;
				}&#xd;
			};&#xd;
			data = $.csv.parsers.parse(csv, options);&#xd;
			if (!config.callback) {&#xd;
				return data;&#xd;
			} else {&#xd;
				config.callback('', data);&#xd;
			}&#xd;
		},&#xd;
		toObjects: function(csv, options, callback) {&#xd;
			var options = (options !== undefined ? options : {});&#xd;
			var config = {};&#xd;
			config.callback = ((callback !== undefined &amp;&amp; typeof(callback) === 'function') ? callback : false);&#xd;
			config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator;&#xd;
			config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter;&#xd;
			config.headers = 'headers' in options ? options.headers : $.csv.defaults.headers;&#xd;
			options.start = 'start' in options ? options.start : 1;&#xd;
			if (config.headers) {&#xd;
				options.start++;&#xd;
			}&#xd;
			if (options.end &amp;&amp; config.headers) {&#xd;
				options.end++;&#xd;
			}&#xd;
			var lines = [];&#xd;
			var data = [];&#xd;
			var options = {&#xd;
				delimiter: config.delimiter,&#xd;
				separator: config.separator,&#xd;
				onParseEntry: options.onParseEntry,&#xd;
				onParseValue: options.onParseValue,&#xd;
				start: options.start,&#xd;
				end: options.end,&#xd;
				state: {&#xd;
					rowNum: 1,&#xd;
					colNum: 1&#xd;
				},&#xd;
				match: false&#xd;
			};&#xd;
			var headerOptions = {&#xd;
				delimiter: config.delimiter,&#xd;
				separator: config.separator,&#xd;
				start: 1,&#xd;
				end: 1,&#xd;
				state: {&#xd;
					rowNum: 1,&#xd;
					colNum: 1&#xd;
				}&#xd;
			}&#xd;
			var headerLine = $.csv.parsers.splitLines(csv, headerOptions);&#xd;
			var headers = $.csv.toArray(headerLine[0], options);&#xd;
			var lines = $.csv.parsers.splitLines(csv, options);&#xd;
			options.state.colNum = 1;&#xd;
			if (headers) {&#xd;
				options.state.rowNum = 2;&#xd;
			} else {&#xd;
				options.state.rowNum = 1;&#xd;
			}&#xd;
			for (var i = 0, len = lines.length; i &lt; len; i++) {&#xd;
				var entry = $.csv.toArray(lines[i], options);&#xd;
				var object = {};&#xd;
				for (var j in headers) {&#xd;
					object[headers[j]] = entry[j];&#xd;
				}&#xd;
				data.push(object);&#xd;
				options.state.rowNum++;&#xd;
			}&#xd;
			if (!config.callback) {&#xd;
				return data;&#xd;
			} else {&#xd;
				config.callback('', data);&#xd;
			}&#xd;
		},&#xd;
		fromArrays: function(arrays, options, callback) {&#xd;
			var options = (options !== undefined ? options : {});&#xd;
			var config = {};&#xd;
			config.callback = ((callback !== undefined &amp;&amp; typeof(callback) === 'function') ? callback : false);&#xd;
			config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator;&#xd;
			config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter;&#xd;
			config.escaper = 'escaper' in options ? options.escaper : $.csv.defaults.escaper;&#xd;
			config.experimental = 'experimental' in options ? options.experimental : false;&#xd;
			if (!config.experimental) {&#xd;
				throw new Error('not implemented');&#xd;
			}&#xd;
			var output = [];&#xd;
			for (i in arrays) {&#xd;
				output.push(arrays[i]);&#xd;
			}&#xd;
			if (!config.callback) {&#xd;
				return output;&#xd;
			} else {&#xd;
				config.callback('', output);&#xd;
			}&#xd;
		},&#xd;
		fromObjects2CSV: function(objects, options, callback) {&#xd;
			var options = (options !== undefined ? options : {});&#xd;
			var config = {};&#xd;
			config.callback = ((callback !== undefined &amp;&amp; typeof(callback) === 'function') ? callback : false);&#xd;
			config.separator = 'separator' in options ? options.separator : $.csv.defaults.separator;&#xd;
			config.delimiter = 'delimiter' in options ? options.delimiter : $.csv.defaults.delimiter;&#xd;
			config.experimental = 'experimental' in options ? options.experimental : false;&#xd;
			if (!config.experimental) {&#xd;
				throw new Error('not implemented');&#xd;
			}&#xd;
			var output = [];&#xd;
			for (i in objects) {&#xd;
				output.push(arrays[i]);&#xd;
			}&#xd;
			if (!config.callback) {&#xd;
				return output;&#xd;
			} else {&#xd;
				config.callback('', output);&#xd;
			}&#xd;
		}&#xd;
	};&#xd;
	$.csvEntry2Array = $.csv.toArray;&#xd;
	$.csv2Array = $.csv.toArrays;&#xd;
	$.csv2Dictionary = $.csv.toObjects;&#xd;
})(jQuery);&#xd;
jQuery.noConflict()&#xd;
})&#xd;
&#xd;
</code>
    </property>
    <property>
      <name>treemenu</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>931b5f39-133d-45a5-8775-96ed94a31b0a</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>      &#xd;
var dataFromFile = null&#xd;
var XWikiUploader = (function(d) {&#xd;
&#xd;
	if (typeof(File) === "undefined" || typeof(FormData) === "undefined" || typeof(XMLHttpRequest) === "undefined") {&#xd;
		return d&#xd;
	}&#xd;
	var b = {&#xd;
		secondsToTime: function(h) {&#xd;
			var g = Math.floor(h / 3600);&#xd;
			var e = Math.floor((h - (g * 3600)) / 60);&#xd;
			var f = Math.floor(h - (g * 3600) - (e * 60));&#xd;
			if (g &lt; 10) {&#xd;
				g = "0" + g&#xd;
			}&#xd;
			if (e &lt; 10) {&#xd;
				e = "0" + e&#xd;
			}&#xd;
			if (f &lt; 10) {&#xd;
				f = "0" + f&#xd;
			}&#xd;
			return g + ":" + e + ":" + f&#xd;
		},&#xd;
		bytesToSize: function(e) {&#xd;
			var g = ["b", "Kb", "Mb"];&#xd;
			if (e == 0) {&#xd;
				return "n/a"&#xd;
			}&#xd;
			var f = parseInt(Math.floor(Math.log(e) / Math.log(1024)));&#xd;
			if (f >= g.length) {&#xd;
				f = g.length - 1&#xd;
			}&#xd;
			return (e / Math.pow(1024, f)).toFixed(1) + " " + g[f]&#xd;
		},&#xd;
		createDiv: function(e, f) {&#xd;
			return new Element("div", {&#xd;
				"class": e || ""&#xd;
			}).update(f || "")&#xd;
		},&#xd;
		createSpan: function(e, f) {&#xd;
			return new Element("span", {&#xd;
				"class": e || ""&#xd;
			}).update(f || "")&#xd;
		},&#xd;
		createButton: function(f, e) {&#xd;
			return new Element("a", {&#xd;
				"class": "button secondary",&#xd;
				href: "#"&#xd;
			}).update(f || "").wrap("span", {&#xd;
				"class": "buttonwrapper"&#xd;
			}).observe("click", e || Prototype.emptyFunction)&#xd;
		}&#xd;
	};&#xd;
	var c = Class.create({&#xd;
		initialize: function(g, e, h, f) {&#xd;
			this.file = g;&#xd;
			this.container = e;&#xd;
			this.formData = h;&#xd;
			this.options = f;&#xd;
			this.validate();&#xd;
			this.initProgressParameters();&#xd;
			this.generateStatusUI()&#xd;
		},&#xd;
		validate: function() {&#xd;
			if (!this.options.fileFilter.test(this.file.type)) {&#xd;
				throw "INVALID_FILE_TYPE"&#xd;
			}&#xd;
			if (this.file.size > this.options.maxFilesize) {&#xd;
				throw "UPLOAD_LIMIT_EXCEEDED"&#xd;
			}&#xd;
		},&#xd;
		generateStatusUI: function() {&#xd;
			var e = this.statusUI = {};&#xd;
			e.UPLOAD_STATUS = b.createDiv("upload-status upload-inprogress");&#xd;
			if (this.options.enableFileInfo) {&#xd;
				e.FILE_INFO = b.createDiv("file-info");&#xd;
				(e.FILE_NAME = b.createSpan("file-name", this.file.name)).title = this.file.type;&#xd;
				e.FILE_SIZE = b.createSpan("file-size", " (" + b.bytesToSize(this.file.size) + ")");&#xd;
				e.FILE_CANCEL = b.createButton("$services.localization.render('core.widgets.html5upload.item.cancel')", this.cancelUpload.bindAsEventListener(this));&#xd;
				e.FILE_INFO.insert(e.FILE_NAME).insert(e.FILE_SIZE).insert(e.FILE_CANCEL);&#xd;
				e.UPLOAD_STATUS.insert(e.FILE_INFO)&#xd;
			}&#xd;
			if (this.options.enableProgressInfo) {&#xd;
				e.PROGRESS_INFO = b.createDiv("progress-info");&#xd;
				e.PROGRESS_CONTAINER = b.createDiv("progress-container");&#xd;
				e.PROGRESS = b.createDiv("progress");&#xd;
				e.PROGRESS_PERCENTAGE = b.createSpan("progress-percentage", "&amp;nbsp;");&#xd;
				e.PROGRESS_SPEED = b.createSpan("progress-speed", "&amp;nbsp;");&#xd;
				e.PROGRESS_REMAINING = b.createSpan("progress-remaining", "&amp;nbsp;");&#xd;
				e.PROGRESS_TRANSFERED = b.createSpan("progress-transfered", "&amp;nbsp;");&#xd;
				e.PROGRESS_INFO.insert(e.PROGRESS_CONTAINER.insert(e.PROGRESS)).insert(e.PROGRESS_PERCENTAGE).insert(e.PROGRESS_TRANSFERED).insert(b.createDiv("progress-time").insert(e.PROGRESS_SPEED).insert(e.PROGRESS_REMAINING).insert(b.createDiv("clearfloats")));&#xd;
				e.UPLOAD_STATUS.insert(e.PROGRESS_INFO)&#xd;
			}&#xd;
			if (this.options.responseContainer) {&#xd;
				e.UPLOAD_RESPONSE = this.options.responseContainer&#xd;
			} else {&#xd;
				e.UPLOAD_RESPONSE = b.createDiv("upload-response");&#xd;
				e.UPLOAD_STATUS.insert(e.UPLOAD_RESPONSE)&#xd;
			}&#xd;
			this.container.insert(e.UPLOAD_STATUS);&#xd;
			return e&#xd;
		},&#xd;
		initProgressParameters: function() {&#xd;
			this.progressData = {&#xd;
				bytesUploaded: 0,&#xd;
				bytesTotal: 0,&#xd;
				previousBytesUploaded: 0,&#xd;
				resultFileSize: "",&#xd;
				latestSpeed: 0,&#xd;
				updatesPerSecond: 2,&#xd;
				updatesDone: 0&#xd;
			}&#xd;
		},&#xd;
		startUploading: function(g) {&#xd;
			if (this.canceled) {&#xd;
				this.onUploadAbort();&#xd;
				return&#xd;
			}&#xd;
			if (g) {&#xd;
				g.stop()&#xd;
			}&#xd;
			var h = new FormData();&#xd;
			h.append(this.formData.input.name, this.file);&#xd;
			var e = this.formData.additionalFields;&#xd;
			Object.keys(e).each(function(i) {&#xd;
				e[i] &amp;&amp; h.append(i, e[i])&#xd;
			});&#xd;
			var f = this.request = new XMLHttpRequest();&#xd;
			if (this.options.enableProgressInfo) {&#xd;
				f.upload.addEventListener("progress", this.onUploadProgress.bindAsEventListener(this), false);&#xd;
				this.timer = setInterval(this.doInnerUpdates.bind(this), Math.round(1000 / this.progressData.updatesPerSecond))&#xd;
			}&#xd;
			f.upload.addEventListener("load", this.onUploadFinish.bindAsEventListener(this), false);&#xd;
			f.addEventListener("load", this.onRequestDone.bindAsEventListener(this), false);&#xd;
			f.addEventListener("error", this.onUploadError.bindAsEventListener(this), false);&#xd;
			f.addEventListener("abort", this.onUploadAbort.bindAsEventListener(this), false);&#xd;
			f.open("POST", this.formData.action);&#xd;
			f.send(h)&#xd;
		},&#xd;
		cancelUpload: function(e) {&#xd;
			e &amp;&amp; e.stop();&#xd;
			if (this.completed) {&#xd;
				return&#xd;
			}&#xd;
			this.request &amp;&amp; this.request.abort();&#xd;
			this.canceled = true;&#xd;
			clearInterval(this.timer);&#xd;
			this.statusUI.FILE_CANCEL.addClassName("upload-canceled-label").removeClassName("buttonwrapper").update("$services.localization.render('core.widgets.html5upload.item.canceled')");&#xd;
			this.statusUI.UPLOAD_STATUS.removeClassName("upload-inprogress").addClassName("upload-canceled")&#xd;
		},&#xd;
		doInnerUpdates: function() {&#xd;
			this.progressData.updatesDone = this.progressData.updatesDone + 1;&#xd;
			var g = this.progressData.updatesDone / this.progressData.updatesPerSecond;&#xd;
			var e = this.progressData.bytesUploaded;&#xd;
			var k = e - this.progressData.previousBytesUploaded;&#xd;
			if (k === 0) {&#xd;
				return&#xd;
			}&#xd;
			this.progressData.previousBytesUploaded = e;&#xd;
			var f = e / g;&#xd;
			var j = this.progressData.bytesTotal - this.progressData.previousBytesUploaded;&#xd;
			var h = j / f;&#xd;
			var l = k * this.progressData.updatesPerSecond;&#xd;
			var i = b.bytesToSize(l) + "/s";&#xd;
			this.progressData.latestSpeed = i;&#xd;
			this.statusUI.PROGRESS_SPEED.update(i);&#xd;
			this.statusUI.PROGRESS_REMAINING.update(" | " + b.secondsToTime(h))&#xd;
		},&#xd;
		onUploadProgress: function(g) {&#xd;
			if (g.lengthComputable) {&#xd;
				this.progressData.bytesUploaded = g.loaded;&#xd;
				this.progressData.bytesTotal = g.total;&#xd;
				var f = Math.round(g.loaded * 100 / g.total);&#xd;
				var e = b.bytesToSize(this.progressData.bytesUploaded);&#xd;
				this.statusUI.PROGRESS_PERCENTAGE.update(f + "%");&#xd;
				this.statusUI.PROGRESS.style.width = f + "%";&#xd;
				this.statusUI.PROGRESS_TRANSFERED.update("(" + e + ")")&#xd;
			} else {&#xd;
				this.statusUI.PROGRESS.update("n/a")&#xd;
			}&#xd;
		},&#xd;
		onUploadFinish: function(e) {&#xd;
			this.completed = true;&#xd;
			clearInterval(this.timer);&#xd;
			if (this.statusUI.FILE_CANCEL) {&#xd;
				this.statusUI.FILE_CANCEL.addClassName("hidden")&#xd;
			}&#xd;
			this.formData.input.fire("xwiki:html5upload:message", {&#xd;
				content: "UPLOAD_FINISHING",&#xd;
				type: "inprogress",&#xd;
				source: this,&#xd;
				parameters: {&#xd;
					name: this.file.name&#xd;
				}&#xd;
			})&#xd;
		},&#xd;
		onRequestDone: function(e) {&#xd;
			if (e &amp;&amp; e.target &amp;&amp; typeof e.target.status === "number") {&#xd;
				if (e.target.status >= 200 &amp;&amp; e.target.status &lt; 300) {&#xd;
					this.statusUI.UPLOAD_RESPONSE.update(e.target.responseText)&#xd;
					document.getElementById("fileName").innerText = this.file.name + "__"+ new Date()&#xd;
					document.getElementById("fileName").textContent = this.file.name + "__"+ new Date()&#xd;
&#xd;
				} else {&#xd;
					this.onUploadError();&#xd;
					return&#xd;
				}&#xd;
			}&#xd;
			if (this.options.enableProgressInfo) {&#xd;
				this.statusUI.PROGRESS_PERCENTAGE.update("100%");&#xd;
				this.statusUI.PROGRESS.style.width = "100%";&#xd;
				this.statusUI.PROGRESS_REMAINING.update(" | 00:00:00");&#xd;
				this.statusUI.PROGRESS_TRANSFERED.update("(" + b.bytesToSize(this.file.size) + ")");&#xd;
				if (this.progressData.latestSpeed === 0) {&#xd;
					this.statusUI.PROGRESS_SPEED.update(b.bytesToSize(this.file.size) + "/s")&#xd;
				}&#xd;
			}&#xd;
			this.formData.input.fire("xwiki:html5upload:message", {&#xd;
				content: "UPLOAD_FINISHED",&#xd;
				type: "done",&#xd;
				source: this,&#xd;
				parameters: {&#xd;
					name: this.file.name,&#xd;
					size: b.bytesToSize(this.file.size)&#xd;
				}&#xd;
			});&#xd;
			this.formData.input.fire("xwiki:html5upload:fileFinished", {&#xd;
				source: this&#xd;
			});&#xd;
			clearInterval(this.timer);&#xd;
			this.statusUI.UPLOAD_STATUS.removeClassName("upload-inprogress").addClassName("upload-done")&#xd;
		},&#xd;
		onUploadError: function() {&#xd;
			this.statusUI.FILE_CANCEL.remove();&#xd;
			this.statusUI.UPLOAD_STATUS.removeClassName("upload-inprogress").addClassName("upload-error");&#xd;
			this.abnormalUploadFinish("UNKNOWN_ERROR")&#xd;
		},&#xd;
		onUploadAbort: function() {&#xd;
			this.abnormalUploadFinish("UPLOAD_ABORTED")&#xd;
		},&#xd;
		abnormalUploadFinish: function(e) {&#xd;
			clearInterval(this.timer);&#xd;
			this.formData.input.fire("xwiki:html5upload:message", {&#xd;
				content: e,&#xd;
				type: "error",&#xd;
				source: this,&#xd;
				parameters: {&#xd;
					name: this.file.name&#xd;
				}&#xd;
			});&#xd;
			this.formData.input.fire("xwiki:html5upload:fileFinished", {&#xd;
				source: this&#xd;
			})&#xd;
		}&#xd;
	});&#xd;
	var a = '$!escapetool.javascript($xwiki.getSpacePreference("upload_maxsize"))';&#xd;
	a = parseInt(a || 33554432);&#xd;
	d.FileUploader = Class.create({&#xd;
		options: {&#xd;
			maxFilesize: a,&#xd;
			fileFilter: /.*/i,&#xd;
			enableFileInfo: true,&#xd;
			enableProgressInfo: true,&#xd;
			progressAutohide: false,&#xd;
			autoUpload: true,&#xd;
			targetURL: null,&#xd;
			responseContainer: null,&#xd;
			responseURL: null&#xd;
		},&#xd;
		messages: {&#xd;
			UNKNOWN_ERROR: new Template("$services.localization.render('core.widgets.html5upload.error.unknown', ['#{name}'])"),&#xd;
			INVALID_FILE_TYPE: new Template("$services.localization.render('core.widgets.html5upload.error.invalidType', ['#{name}'])"),&#xd;
			UPLOAD_LIMIT_EXCEEDED: new Template("$services.localization.render('core.widgets.html5upload.error.invalidSize', ['#{name}', '#{size}'])"),&#xd;
			UPLOAD_ABORTED: new Template("$services.localization.render('core.widgets.html5upload.error.aborted', ['#{name}'])"),&#xd;
			UPLOAD_FINISHING: new Template("$services.localization.render('core.widgets.html5upload.status.finishing', ['#{name}'])"),&#xd;
			UPLOAD_FINISHED: new Template("$services.localization.render('core.widgets.html5upload.status.finished', ['#{name}', '#{size}'])")&#xd;
		},&#xd;
		initialize: function(e, f) {&#xd;
			this.options = Object.extend(Object.clone(this.options), f || {});&#xd;
			if (e.__x_html5uploader) {&#xd;
				return&#xd;
			} else {&#xd;
				e.__x_html5uploader = this&#xd;
			} if (e.type != "file") {&#xd;
				return&#xd;
			}&#xd;
			this.input = e;&#xd;
			this.inputContainer = this.input.up(".fileupload-field") || this.input;&#xd;
			this.form = e.form;&#xd;
			if (!this.form) {&#xd;
				return&#xd;
			}&#xd;
			var g = this.form.down("input[type=hidden][name=" + e.name + "__filter]");&#xd;
			if (!this.options.fileFilter &amp;&amp; g &amp;&amp; g.value != "") {&#xd;
				this.options.fileFilter = new RegExp(g.value, "i")&#xd;
			}&#xd;
			this.options.targetURL = this.options.targetURL || this.form.action;&#xd;
			this.formData = {&#xd;
				input: this.input,&#xd;
				action: this.options.targetURL,&#xd;
				additionalFields: {}&#xd;
			};&#xd;
			var i = this.form.down("input[name=xredirect]");&#xd;
			this.formData.additionalFields.xredirect = this.options.responseURL || i &amp;&amp; i.value;&#xd;
			var h = this.form.down("input[name=form_token]");&#xd;
			h &amp;&amp; (this.formData.additionalFields.form_token = h.value);&#xd;
			this.onUploadNextFile = this.onUploadNextFile.bindAsEventListener(this);&#xd;
			this.input.observe("change", this.onFilesSelected.bindAsEventListener(this));&#xd;
			this.input.observe("xwiki:html5upload:start", this.showUploadStatus.bindAsEventListener(this));&#xd;
			this.input.observe("xwiki:html5upload:start", this.onUploadNextFile);&#xd;
			this.input.observe("xwiki:html5upload:fileFinished", this.onUploadNextFile);&#xd;
			this.input.observe("xwiki:html5upload:message", this.onMessage.bindAsEventListener(this));&#xd;
			this.input.observe("xwiki:html5upload:done", this.onUploadDone.bindAsEventListener(this));&#xd;
			this.generateStatusUI()&#xd;
		},&#xd;
		generateStatusUI: function() {&#xd;
			var e = this.statusUI = {};&#xd;
			e.CONTAINER = b.createDiv("upload-status-container");&#xd;
			e.LIST = b.createDiv("upload-status-list");&#xd;
			e.CANCEL = b.createButton("$services.localization.render('core.widgets.html5upload.cancelAll')", this.cancelUpload.bindAsEventListener(this));&#xd;
			e.HIDE = b.createButton("$services.localization.render('core.widgets.html5upload.hideStatus')", this.hideUploadStatus.bindAsEventListener(this));&#xd;
			e.HIDE.hide();&#xd;
			e.CONTAINER.insert(e.LIST).insert(e.CANCEL).insert(e.HIDE)&#xd;
		},&#xd;
		showUploadStatus: function() {&#xd;
			this.inputContainer.insert({&#xd;
				after: this.statusUI.CONTAINER&#xd;
			});&#xd;
			this.statusUI.HIDE.hide();&#xd;
			this.statusUI.CANCEL.show()&#xd;
		},&#xd;
		hideUploadStatus: function(e) {&#xd;
			e &amp;&amp; e.stop();&#xd;
			this.input.value = "";&#xd;
			this.statusUI.CONTAINER.up() &amp;&amp; this.statusUI.CONTAINER.remove();&#xd;
			this.statusUI.LIST.update("")&#xd;
		},&#xd;
		onFilesSelected: function() {&#xd;
			var h = this.input.files.length;&#xd;
			this.fileUploadItems = [];&#xd;
			for (var g = 0; g &lt; h; ++g) {&#xd;
				var f = this.input.files[g];&#xd;
				try {&#xd;
					this.fileUploadItems.push(new c(f, this.statusUI.LIST, this.formData, this.options))&#xd;
				} catch (e) {&#xd;
					this.showMessage(e, "error", {&#xd;
						size: b.bytesToSize(this.options &amp;&amp; this.options.maxFilesize),&#xd;
						name: f.name,&#xd;
						type: f.type&#xd;
					})&#xd;
				}&#xd;
			}&#xd;
			Event.fire(this.input, "xwiki:html5upload:start")&#xd;
		},&#xd;
		onUploadNextFile: function() {&#xd;
			var e = this.currentUpload = this.fileUploadItems.shift();&#xd;
			if (e) {&#xd;
				e.startUploading()&#xd;
			} else {&#xd;
				Event.fire(this.input, "xwiki:html5upload:done")&#xd;
			}&#xd;
		},&#xd;
		cancelUpload: function(e) {&#xd;
			e &amp;&amp; e.stop();&#xd;
			this.fileUploadItems.invoke("cancelUpload");&#xd;
			this.currentUpload &amp;&amp; this.currentUpload.cancelUpload();&#xd;
			this.input.fire("xwiki:html5upload:done")&#xd;
		},&#xd;
		onUploadDone: function() {&#xd;
			this.statusUI.CANCEL.hide();&#xd;
			if (this.options.progressAutohide) {&#xd;
				setTimeout(this.hideUploadStatus.bind(this), 2000)&#xd;
			} else {&#xd;
				this.statusUI.HIDE.show()&#xd;
			}&#xd;
		},&#xd;
		onMessage: function(e) {&#xd;
			if (!(e.memo &amp;&amp; e.memo.source &amp;&amp; e.memo.content)) {&#xd;
				return&#xd;
			}&#xd;
			if (e.memo.source._currentMessage) {&#xd;
				e.memo.source._currentMessage.hide()&#xd;
			}&#xd;
			e.memo.source._currentMessage = this.showMessage(e.memo.content, e.memo.type, e.memo.parameters)&#xd;
		},&#xd;
		showMessage: function(h, f, g) {&#xd;
			var e = this.messages[h] || h;&#xd;
			if (e instanceof Template) {&#xd;
				e = e.evaluate(g || {})&#xd;
			}&#xd;
			return new d.widgets.Notification(e, f || "plain")&#xd;
		},&#xd;
		hideFormButtons: function() {&#xd;
			if (!this.form.hasClassName("html5upload-initialized")) {&#xd;
				this.form.addClassName("html5upload-initialized");&#xd;
				if (this.options.autoUpload) {&#xd;
					this.form.select("input[type=submit]").invoke("hide")&#xd;
				}&#xd;
				var e = this.form.down(".cancel");&#xd;
				if (e) {&#xd;
					e.hide()&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
	});&#xd;
	return d&#xd;
}(XWikiUploader || {}));&#xd;
var targetInput = document.getElementById("my_upload");&#xd;
if (targetInput) {&#xd;
	new XWikiUploader.FileUploader(targetInput, {&#xd;
		autoUpload: true,&#xd;
		progressAutohide: true,&#xd;
		responseURL: '/xwiki/bin/get/WiperDog/ImportInstance?xpage=attachmentslist',&#xd;
		responseContainer: $('my_upload_results'),&#xd;
		fileFilter: /^.*\.(?!csv).*$/&#xd;
&#xd;
	})&#xd;
}&#xd;
&#xd;
require(['jquery'], function($) {&#xd;
	&#xd;
	/**&#xd;
	 * Execute when page is displayed&#xd;
	**/&#xd;
	$(function() {&#xd;
		var param = 'importinstances'&#xd;
		var servlet = null&#xd;
&#xd;
		$.ajax({&#xd;
			type: "GET",&#xd;
			url: "/xwiki/bin/get/WiperDog/GetServlet?outputSyntax=plain&amp;name=" + param,&#xd;
			async: false,&#xd;
			success: function(result) {&#xd;
				if (result == null || result == "") {&#xd;
					//$('#messageLoadFile').text('Can not get data from server ! Wiperdog is on yet ? ')&#xd;
					return&#xd;
				} else {&#xd;
					servlet = result&#xd;
				}&#xd;
				setUploadButtonEvent(servlet)&#xd;
				setClickFileEvent(servlet)&#xd;
				setAddToListButtonEvent()&#xd;
				setSaveButtonEvent(servlet)&#xd;
				setExportButtonEvent(servlet)&#xd;
			},&#xd;
			error: function(xhr, status, error) {}&#xd;
		})&#xd;
	});&#xd;
&#xd;
	/**&#xd;
	 * setUploadButtonEvent: set Upload Button's Event&#xd;
	 * @param domainURL:  &#xd;
	 * @return &#xd;
	**/&#xd;
	function setUploadButtonEvent(domainURL){&#xd;
		$('#fileName').bind("DOMSubtreeModified", function() {&#xd;
			$('#messageLoadFile').text('')&#xd;
			fileName =   $(this).text().substring(0,$(this).text().lastIndexOf("__"))&#xd;
			$.ajax({&#xd;
				type: "GET",&#xd;
				url: "/xwiki/bin/download/WiperDog/ImportInstance/" + fileName,&#xd;
				dataType: "text",&#xd;
				async: false,&#xd;
				success: function(data) {&#xd;
					$('#fileContent').val(data)&#xd;
					$('#messageLoadFile').text('File ' + fileName +" loaded !").removeClass("error").addClass('message')&#xd;
				},&#xd;
				error: function(xhr, status, error) {&#xd;
					alert(error)&#xd;
				}&#xd;
			});&#xd;
		});&#xd;
	}&#xd;
&#xd;
	/**&#xd;
	 * setClickFileEvent: set Click Existed File Event&#xd;
	 * @param domainURL:  &#xd;
	 * @return &#xd;
	**/&#xd;
	function setClickFileEvent(domainURL){&#xd;
		$(document).on('click', '#formUpload .attachment', function() {&#xd;
			$(this).click(function() {&#xd;
				fileName = $(this).find('.name').children().text()&#xd;
				$.ajax({&#xd;
					type: "GET",&#xd;
					url: "/xwiki/bin/download/WiperDog/ImportInstance/" + fileName,&#xd;
					dataType: "text",&#xd;
					async: false,&#xd;
					success: function(data) {&#xd;
						$('#fileContent').val(data)&#xd;
						$('#messageLoadFile').text('File ' + fileName +" loaded !").removeClass("error").addClass('message')&#xd;
					},&#xd;
					error: function(xhr, status, error) {&#xd;
						alert(error)&#xd;
					}&#xd;
				});&#xd;
			})&#xd;
		});&#xd;
	}&#xd;
&#xd;
	/**&#xd;
	 * setAddToListButtonEvent: set Add to List Button Event&#xd;
	 * @param :  &#xd;
	 * @return &#xd;
	**/&#xd;
	function setAddToListButtonEvent(){&#xd;
&#xd;
		$('#loadFromFile').unbind('click')&#xd;
		$('#loadFromFile').click(function(event) {&#xd;
			var listInstance = []&#xd;
			var data = $('#fileContent').val().trim();&#xd;
			var listObject = []&#xd;
			var headers = 0&#xd;
			&#xd;
			if ( null != data &amp;&amp; "" != data ) {&#xd;
				var listObject = $.csv.toObjects(data)&#xd;
				var arrStr = data.split("\n")&#xd;
				for (var i = 0; i &lt; arrStr.length; i++) {&#xd;
					var tmpHeaders = arrStr[i].split(",")&#xd;
&#xd;
					for (var j = 0; j &lt; tmpHeaders.length; j++) {&#xd;
						if (tmpHeaders[j] == "") {&#xd;
                                                        setErrorMessage("err_import_inst_header","#messageLoadFile");&#xd;
							return&#xd;
						}&#xd;
					}&#xd;
					if (($.inArray('INST_NAME', tmpHeaders) == -1) || ($.inArray('SCHEDULE', tmpHeaders) == -1)) {&#xd;
                                                setErrorMessage("err_import_inst_header_params","#messageLoadFile");&#xd;
						return&#xd;
					}&#xd;
					headers = tmpHeaders.length&#xd;
					break;&#xd;
				}&#xd;
				var valid = validCSV(listObject, headers)&#xd;
				if (valid['status'] == false) {&#xd;
					$('#messageLoadFile').text('Failed to load data Reason: ' + valid['message']).addClass('error')&#xd;
					return&#xd;
				} else {&#xd;
					$('#messageLoadFile').text("").removeClass('error');&#xd;
					for (var i = 0; i &lt; listObject.length; i++) {&#xd;
						listInstance.push(createInstance(listObject[i]))&#xd;
					}&#xd;
				}&#xd;
				&#xd;
			}&#xd;
			&#xd;
			var displayedInstances = getDisplayedInstances()&#xd;
			if (displayedInstances == null || displayedInstances == "") {&#xd;
				setDisplayedInstances(listInstance)&#xd;
			} else {&#xd;
				for (var i = 0; i &lt; displayedInstances.length; i++) {&#xd;
					var check = false&#xd;
					for (var j = 0; j &lt; listInstance.length; j++) {&#xd;
						if (displayedInstances[i]['INST_NAME'].trim() == listInstance[j]['INST_NAME'].trim()) {&#xd;
							var conf = confirm("Dubplicate data at line " + (i + 1) + " .Overwrite it ?")&#xd;
							if (conf) {&#xd;
								check = true&#xd;
								break;&#xd;
							} else {&#xd;
								return&#xd;
							}&#xd;
						}&#xd;
					};&#xd;
					if (check) {&#xd;
						break&#xd;
					}&#xd;
				}&#xd;
				for (var i = 0; i &lt; listInstance.length; i++) {&#xd;
					var dubplicate = false&#xd;
					for (var j = 0; j &lt; displayedInstances.length; j++) {&#xd;
						if (listInstance[i]['INST_NAME'].trim() == displayedInstances[j]['INST_NAME'].trim()) {&#xd;
							displayedInstances[j]['SCHEDULE'] = listInstance[i]['SCHEDULE']&#xd;
							displayedInstances[j]['PARAMS'] = listInstance[i]['PARAMS']&#xd;
							dubplicate = true&#xd;
							break;&#xd;
						}&#xd;
					};&#xd;
					if (!dubplicate) {&#xd;
						pushDisplayedInstances(listInstance[i])&#xd;
					}&#xd;
				};&#xd;
			}&#xd;
&#xd;
			displayedInstances = getDisplayedInstances()&#xd;
			$('#instancesTable').find('tr:gt(0)').remove()&#xd;
			$("#instancesTable").append(getExistedInstances)&#xd;
			for (var i = 0; i &lt; displayedInstances.length; i++) {&#xd;
				addCsvToInstancesTable(displayedInstances[i], 'instancesTable')&#xd;
			}&#xd;
&#xd;
			if(listObject.length > 0 ) {&#xd;
                                setMessage("msg_import_inst_success","#messageLoadFile");&#xd;
			} else {&#xd;
                                setErrorMessage("err_import_inst_no_data","#messageLoadFile");&#xd;
			}&#xd;
&#xd;
			$('#fileContent').val("");&#xd;
		});&#xd;
	}&#xd;
&#xd;
	function createInstance(data) {&#xd;
		var instance = {}&#xd;
		instance["INST_NAME"] = data['INST_NAME']&#xd;
		instance["SCHEDULE"] = data['SCHEDULE']&#xd;
		var params = {}&#xd;
		for (var key in data) {&#xd;
			if (key != "INST_NAME" &amp;&amp; key != "SCHEDULE" &amp;&amp; !key.startsWith('function ')) {&#xd;
				if (data[key] != "") {&#xd;
					params[key] = data[key]&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
		instance['PARAMS'] = params&#xd;
		return instance&#xd;
	}&#xd;
&#xd;
	/**&#xd;
	 * addCsvToInstancesTable: add each column of csv file to instances table&#xd;
	 * @param data: column of csv file&#xd;
	 * @param tableId: instances table's id&#xd;
	 * @return &#xd;
	**/&#xd;
	function addCsvToInstancesTable(data, tableId){&#xd;
&#xd;
		var instancesTable = document.getElementById(tableId)&#xd;
		var schedule = ""&#xd;
		if (data['SCHEDULE'] != null) {&#xd;
			schedule = data['SCHEDULE']&#xd;
		}&#xd;
		var params = ""&#xd;
		if (data['PARAMS'] != null) {&#xd;
			params = JSON.stringify(data['PARAMS'])&#xd;
		}&#xd;
		$('#instancesTable').append('&lt;tr>&lt;td>'+data['INST_NAME']+'&lt;/td>&lt;td>'+schedule+'&lt;/td>&lt;td>'+params+'&lt;/td>&lt;/tr>')&#xd;
	}&#xd;
&#xd;
&#xd;
	function validCSV(data, headers) {&#xd;
		var message = ""&#xd;
		var status = true&#xd;
		for (var i = 0; i &lt; data.length; i++) {&#xd;
			for (var key in data[i]) {&#xd;
				if (data[i][key] == null) {&#xd;
					message = "Missing params : Params must be contains " + headers + " element(s)! - Line : " + (i + 2)&#xd;
					status = false&#xd;
					break&#xd;
				}&#xd;
				if (data[i]["INST_NAME"] == "") {&#xd;
					message = "Missing required params : Instance name must be required  - Line : " + (i + 2)&#xd;
					status = false&#xd;
					break&#xd;
				}&#xd;
			}&#xd;
			if (!status) {&#xd;
				break&#xd;
			}&#xd;
			for (var j = i + 1; j &lt; data.length; j++) {&#xd;
				if (data[i]['INST_NAME'] == data[j]['INST_NAME']) {&#xd;
					message = "Dubplicate instance name at line  " + (i + 2) + " and " + (j + 2)&#xd;
					status = false&#xd;
					break&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
		return {&#xd;
			status: status,&#xd;
			message: message&#xd;
		}&#xd;
	}&#xd;
&#xd;
	/**&#xd;
	 * setSaveButtonEvent: set Save Button's Event&#xd;
	 * @param domainURL:  &#xd;
	 * @return &#xd;
	**/&#xd;
	function setSaveButtonEvent(domainURL){&#xd;
		$("#saveToInstFile").unbind('click')&#xd;
		$("#saveToInstFile").click(function(event) {&#xd;
&#xd;
			var jobFileName = getJobFileName()&#xd;
			if(""==jobFileName){&#xd;
				return&#xd;
			}&#xd;
&#xd;
			if (null != getDisplayedInstances()) {&#xd;
				$.ajax({&#xd;
					url: domainURL + "?action=getInstance&amp;jobFileName=" + jobFileName + ".job",&#xd;
					type: 'POST',&#xd;
					crossDomain: true,&#xd;
					dataType: 'json',&#xd;
					data: JSON.stringify(getDisplayedInstances()),&#xd;
					success: function(result) {&#xd;
						if (result.status == "success") {&#xd;
							$('#messageLoadFile').html("Save to instances file successfully ! &lt;/br>" + result.filePath).addClass('message').removeClass('error')&#xd;
						} else {&#xd;
							if (result.status == "failed") {&#xd;
								$('#messageLoadFile').text("Failed to save to instances file !").addClass('error').removeClass('message')&#xd;
							}&#xd;
						}&#xd;
					},&#xd;
					error: function(xhr, status, error) {&#xd;
						console.log(error)&#xd;
					}&#xd;
				})&#xd;
			} else {&#xd;
                                setErrorMessage("err_import_inst_no_data_save","#messageLoadFile");&#xd;
			}&#xd;
		});&#xd;
	}&#xd;
	&#xd;
	/**&#xd;
	 * setImportButtonEvent: set Export Button's Event&#xd;
	 * @param domainURL:  &#xd;
	 * @return &#xd;
	**/&#xd;
	function setExportButtonEvent(domainURL){&#xd;
		$("#exportToCSV").unbind('click')&#xd;
		$("#exportToCSV").click(function(event) {&#xd;
&#xd;
			var jobFileName = getJobFileName()&#xd;
			if(""==jobFileName){&#xd;
				return&#xd;
			}&#xd;
			&#xd;
			$.ajax({&#xd;
				url: domainURL + "?action=exportCSV&amp;jobFileName=" + jobFileName + ".job",&#xd;
				type: 'POST',&#xd;
				dataType: 'json',&#xd;
				data: JSON.stringify(getDisplayedInstances()),&#xd;
				success: function(result) {&#xd;
					if (result.status == "success") {&#xd;
						$('#messageLoadFile').html("Export file successfully ! &lt;/br>" + result.filePath).addClass('message').removeClass('error')&#xd;
					} else {&#xd;
						if (result.status == "failed") {&#xd;
							$('#messageLoadFile').text("Failed to export csv file !").addClass('error').removeClass('message')&#xd;
						}&#xd;
					}&#xd;
				},&#xd;
				error: function(xhr, status, error) {&#xd;
					console.log(error)&#xd;
				}&#xd;
			})&#xd;
		});&#xd;
&#xd;
	}&#xd;
&#xd;
	/**&#xd;
	 * getJobFileName: get Job File name. if no job is specified, display error message.&#xd;
	 * @param&#xd;
	 * @return jobFileName&#xd;
	**/&#xd;
	function getJobFileName(){&#xd;
		var jobFileName = $("#jobNameText").val()&#xd;
		&#xd;
		if (null == jobFileName || "" == jobFileName ) {&#xd;
			jobFileName = ""&#xd;
			$('#messageLoadFile').text('No job specific for instances !.Select job at left menu to continue').addClass('error')&#xd;
		} else {&#xd;
			$('#messageLoadFile').text('')&#xd;
		}&#xd;
&#xd;
		return jobFileName&#xd;
	}&#xd;
&#xd;
	jQuery.noConflict();&#xd;
});</code>
    </property>
    <property>
      <name>process</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>e8c78688-b154-4efe-b465-1445d319de0b</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>function bindingData(result) {&#xd;
&#xd;
require(['jquery'], function($) {&#xd;
        /**&#xd;
         * bindingData: binding data into elements&#xd;
         * @params result: data response from servlet&#xd;
         */&#xd;
            // JOB NAME&#xd;
            $("[id=jobNameText]").val(result.Job.JOB)&#xd;
&#xd;
            // INSTANCES&#xd;
            var htmlInstancesSource = ""&#xd;
            var mapInstances = result.instances&#xd;
            var existedInstancesList = []&#xd;
            if (mapInstances != null) {&#xd;
                var lstKeyInst = Object.keys(mapInstances)&#xd;
                for (var i = 0; i &lt; lstKeyInst.length; i++) {&#xd;
                    &#xd;
                    var existedInstance = {}&#xd;
                    var instName = lstKeyInst[i];&#xd;
                    var params = ""&#xd;
                    var schedule = ""&#xd;
&#xd;
                    if (mapInstances[lstKeyInst[i]]['params'] != null) {&#xd;
                        params = JSON.stringify(mapInstances[lstKeyInst[i]]['params'])&#xd;
                        existedInstance['PARAMS'] = convertToMap(standardParams(params))&#xd;
                    }&#xd;
                    if (mapInstances[lstKeyInst[i]]['schedule'] != null) {&#xd;
                        schedule = mapInstances[lstKeyInst[i]]['schedule']&#xd;
                        existedInstance['SCHEDULE'] = schedule&#xd;
                    }&#xd;
                    existedInstance['INST_NAME'] = instName&#xd;
                    existedInstancesList.push(existedInstance)&#xd;
                    htmlInstancesSource += "&lt;tr>&lt;td>" + instName + "&lt;/td>&lt;td>" + schedule + "&lt;/td>&lt;td>" + params + "&lt;/td>&lt;/tr>"&#xd;
                }&#xd;
            }&#xd;
            &#xd;
            $("#instancesTable").append(htmlInstancesSource)&#xd;
            setExistedInstances(existedInstancesList)&#xd;
            setDisplayedInstances(existedInstancesList)&#xd;
});&#xd;
&#xd;
}&#xd;
&#xd;
/**&#xd;
 * standardParams:&#xd;
 *  - edit paramsText text to standard before send to servlet&#xd;
 * @param paramsText: string data receive from input "value" of JOB PARAMS form&#xd;
 * @return standard paramsText&#xd;
*/&#xd;
function standardParams(paramsText) {&#xd;
    paramsText = replaceAllString(paramsText, "\"", "")&#xd;
    paramsText = replaceAllString(paramsText, "'", "")&#xd;
&#xd;
    var ouputParams = ""&#xd;
    var lstRoot = paramsText.split(",")&#xd;
    if ((lstRoot.length == 1) &amp;&amp; (paramsText.indexOf("{") == -1)&amp;&amp; (paramsText.indexOf("}") == -1)&amp;&amp; (paramsText.indexOf("[") == -1)&amp;&amp; (paramsText.indexOf("]") == -1)) {&#xd;
        ouputParams = "\"" + paramsText + "\""&#xd;
    } else {&#xd;
        paramsText = replaceAllString(paramsText, "{", "\"")&#xd;
        paramsText = replaceAllString(paramsText, "}", "\"\"")&#xd;
        paramsText = replaceAllString(paramsText, "[", "\"")&#xd;
        paramsText = replaceAllString(paramsText, "]", "\"\"")&#xd;
&#xd;
        if (paramsText.indexOf(":") == -1) {&#xd;
            ouputParams = standardGroupKey(paramsText)&#xd;
        } else {&#xd;
            lstRoot = paramsText.split(",")&#xd;
            for (var i = 0; i &lt; lstRoot.length; i++) {&#xd;
                var lstColon = lstRoot[i].split(":")&#xd;
                for (var j = 0; j &lt; lstColon.length; j++) {&#xd;
                    ouputParams += "\"" + lstColon[j].trim() + "\"" + ":"&#xd;
                }&#xd;
                ouputParams = ouputParams.substring(0, ouputParams.length - 1)&#xd;
                ouputParams += ","&#xd;
            }&#xd;
            ouputParams = ouputParams.substring(0, ouputParams.length - 1)&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"\"\"\"", "\"]]")&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"\"", "\"]")&#xd;
            ouputParams = replaceAllString(ouputParams, "\"\"", "[\"")&#xd;
&#xd;
            if (ouputParams.indexOf("[") != 0) {&#xd;
                ouputParams = "[" + ouputParams + "]"&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
    //If data null before edit&#xd;
    ouputParams = replaceAllString(ouputParams, ":[\",", ":\"\",")&#xd;
    ouputParams = replaceAllString(ouputParams, ":\"]\"", ":\"\"]")&#xd;
    ouputParams = replaceAllString(ouputParams, ":\"]]\"", ":\"\"]]")&#xd;
    return ouputParams&#xd;
}    &#xd;
&#xd;
&#xd;
function convertToMap(paramString){&#xd;
&#xd;
    var params = {};&#xd;
&#xd;
    //remove {}[]&#xd;
    var str = "";&#xd;
    str = replaceAllString(paramString,"{","");&#xd;
    str = replaceAllString(str,"}","");&#xd;
    str = replaceAllString(str,"\[","");&#xd;
    str = replaceAllString(str,"\]","");&#xd;
    str = replaceAllString(str,"\"","");&#xd;
    &#xd;
    //split by ","&#xd;
    var splitStr;&#xd;
    splitStr = str.split(",");&#xd;
    &#xd;
    for(var i=0;i&lt;splitStr.length;i++){&#xd;
        //split by ":"&#xd;
        var splitStr2;&#xd;
        splitStr2 = splitStr[i].split(":");&#xd;
        params[splitStr2[0]] = splitStr2[1];&#xd;
    }&#xd;
    &#xd;
    return params;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * replaceAllString: replace all character to an other character&#xd;
 * @param oriStr: original string&#xd;
 * @param strTarget: original character&#xd;
 * @param strSubString: change character&#xd;
 * @return standard oriStr&#xd;
*/&#xd;
function replaceAllString(oriStr, strTarget, strSubString) {&#xd;
    var strText = oriStr;&#xd;
    var intIndexOfMatch = strText.indexOf(strTarget);&#xd;
    while (intIndexOfMatch != -1) {&#xd;
        strText = strText.replace(strTarget, strSubString)&#xd;
        intIndexOfMatch = strText.indexOf(strTarget);&#xd;
    }&#xd;
    return (strText);&#xd;
}&#xd;
</code>
    </property>
    <property>
      <name>bindingData</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>3</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>13d9c4fc-6f38-4ff8-a95c-ad471b82aff0</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>function resetControl(type) {&#xd;
	require(['jquery'], function($) {&#xd;
		if("MONITORINGTYPE"==type){&#xd;
			$("#listJob").html("&lt;option id='noChoice' value='noChoice'>-select a job-&lt;/option>")&#xd;
			$("#jobNameText").val("")&#xd;
			$("#instancesTable").html("&lt;tr>&lt;th>Instance Name&lt;/th>&lt;th>Schedule&lt;/th>&lt;th>Params&lt;/th>&lt;/tr>")&#xd;
		}else if ("DBTYPE"==type){&#xd;
			$("#listJob").html("&lt;option id='noChoice' value='noChoice'>-select a job-&lt;/option>")&#xd;
			$("#jobNameText").val("")&#xd;
			$("#instancesTable").html("&lt;tr>&lt;th>Instance Name&lt;/th>&lt;th>Schedule&lt;/th>&lt;th>Params&lt;/th>&lt;/tr>")&#xd;
		}else if ("JOBFILE"==type){&#xd;
			$("#jobNameText").val("")&#xd;
			$("#instancesTable").html("&lt;tr>&lt;th>Instance Name&lt;/th>&lt;th>Schedule&lt;/th>&lt;th>Params&lt;/th>&lt;/tr>")&#xd;
		}&#xd;
	});&#xd;
}&#xd;
</code>
    </property>
    <property>
      <name>resetControl</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>4</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>f2228ed6-e17f-4395-a9a4-daace08fbfa8</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>/**&#xd;
 * displayedInstances: displayed instances. &#xd;
 * This will be saved to .instances file.&#xd;
**/&#xd;
displayedInstances= []&#xd;
function setDisplayedInstances(value){&#xd;
	displayedInstances=value;&#xd;
}&#xd;
function pushDisplayedInstances(value){&#xd;
	displayedInstances.push(value)&#xd;
}&#xd;
function getDisplayedInstances(){&#xd;
	return displayedInstances&#xd;
}&#xd;
&#xd;
/**&#xd;
 * existedInstances: existed instances.&#xd;
 * This keep existed instances and be used when add imported instances.&#xd;
**/&#xd;
existedInstances = []&#xd;
function setExistedInstances(value){&#xd;
	existedInstances = value&#xd;
}&#xd;
function getExistedInstances(){&#xd;
	return existedInstances&#xd;
}&#xd;
</code>
    </property>
    <property>
      <name>variables</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>b325f341-057d-4cbc-978f-ba1968b9df3f</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#nav a:hover{&#xd;
 font-weight:bold;&#xd;
 text-decoration:none;&#xd;
 cursor:pointer;&#xd;
 color: #0089DC&#xd;
&#xd;
}&#xd;
&#xd;
#nav{&#xd;
 float:left;&#xd;
width:30%;&#xd;
margin-right:20px;&#xd;
}&#xd;
#viewer #displayTable{&#xd;
  font-weight:bold;&#xd;
  color:#0089DC;&#xd;
  float :left;&#xd;
  width:65%;&#xd;
}&#xd;
&#xd;
h6 {&#xd;
    margin-left: 20px;&#xd;
    color:black;&#xd;
    font-family:arial;&#xd;
    font-size:14px;&#xd;
}&#xd;
&#xd;
h5 {&#xd;
    color:black;&#xd;
    font-family:arial;&#xd;
    font-size:16px;&#xd;
}&#xd;
&#xd;
#message_add {&#xd;
    float: right;&#xd;
    font-size: 1.5em;&#xd;
    margin-right: 200px&#xd;
}&#xd;
#xwikicontent input[type='text'],textarea{&#xd;
  background: #FFFFD6!important;&#xd;
 width:100%;&#xd;
}&#xd;
#xwikicontent textarea{&#xd;
  min-height:100px&#xd;
}&#xd;
.editable{&#xd;
  color : #000; &#xd;
}&#xd;
.readonly {&#xd;
 color: #636B75&#xd;
}&#xd;
#viewer .button {&#xd;
 margin:10px&#xd;
}&#xd;
#headerMess{&#xd;
text-align: center;&#xd;
font-weight: bold;&#xd;
font-size: 1.5em&#xd;
}&#xd;
#imgLoader{&#xd;
margin-left:15px&#xd;
}&#xd;
#instancesTable{&#xd;
width: 65%;&#xd;
display: inline-table;&#xd;
}&#xd;
#formUpload{&#xd;
}&#xd;
/* 2014/08/01 koyuri delete&#xd;
#formUpload{&#xd;
display:none&#xd;
}&#xd;
*/&#xd;
.message {&#xd;
color: green&#xd;
}&#xd;
.error {&#xd;
color: red&#xd;
}&#xd;
#showCSVTip{&#xd;
background-color: #157ABE;&#xd;
color: #F3F3F3;&#xd;
font-weight: bold&#xd;
}&#xd;
&#xd;
#csvTip{&#xd;
font-size: 0.8em !important,&#xd;
font-weight: normal !important,&#xd;
color: black !important&#xd;
}</code>
    </property>
    <property>
      <name></name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>dd5f0985-b00f-47fb-b955-48ad4d9d30e4</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>1</number>
    <className>XWiki.XWikiRights</className>
    <guid>993ff15a-b669-47c0-99f4-7b2a8f9baf92</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>4</number>
    <className>XWiki.XWikiRights</className>
    <guid>3b2f9b48-a53e-4f96-8d56-65aa7e3e7f4a</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users>xwiki:XWiki.Admin</users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>5</number>
    <className>XWiki.XWikiRights</className>
    <guid>ed0d0706-ebd1-4b0e-96aa-b7ca2e146cad</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users>xwiki:XWiki.Admin</users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>6</number>
    <className>XWiki.XWikiRights</className>
    <guid>ff9e8bd7-f15a-4a37-8de2-f0b562f09428</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>7</number>
    <className>XWiki.XWikiRights</className>
    <guid>f034d9ce-bda7-4b99-aa5e-345babe901c3</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>8</number>
    <className>XWiki.XWikiRights</className>
    <guid>f0289aa3-e8af-4dc3-89ed-4b1ebbeee52e</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>9</number>
    <className>XWiki.XWikiRights</className>
    <guid>780a282f-ccb9-44f1-9a94-9e202032a49c</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAdminGroup,</groups>
    </property>
    <property>
      <levels>view,edit,delete,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>11</number>
    <className>XWiki.XWikiRights</className>
    <guid>0ee04336-f5cf-41ba-a77a-afaf6893dbc1</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>12</number>
    <className>XWiki.XWikiRights</className>
    <guid>1f054517-9dc6-41f5-81d7-4e46a2118bea</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>xwiki:XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>13</number>
    <className>XWiki.XWikiRights</className>
    <guid>d8d12e08-2b18-43c7-861b-d0be9ae12de5</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>edit,comment</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>14</number>
    <className>XWiki.XWikiRights</className>
    <guid>bb587585-707c-4b04-b29c-0231087d9224</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup,</groups>
    </property>
    <property>
      <levels>delete</levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
  <object>
    <name>WiperDog.ImportInstance</name>
    <number>15</number>
    <className>XWiki.XWikiRights</className>
    <guid>5b40910c-a087-40f3-b5d5-75566ef5ac76</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups></groups>
    </property>
    <property>
      <levels></levels>
    </property>
    <property>
      <users></users>
    </property>
  </object>
</xwikidoc>